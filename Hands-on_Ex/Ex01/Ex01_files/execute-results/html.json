{
  "hash": "fccec105304c9e7f50330d36c91ec878",
  "result": {
    "markdown": "---\ntitle: \"Hands-on Ex01\"\nauthor: \"Li Ziyi\"\n---\n\n\n# Getting Started\n\n## Install and launch R packages\n\nThe code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse)\n```\n:::\n\n\n## Importing the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_data <- read_csv(\"data/Exam_data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\n# Plotting a simple bar chart\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](Ex01_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n# Plotting a simple histogram\n\n## Using R Graphics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(exam_data$MATHS)\n```\n\n::: {.cell-output-display}\n![](Ex01_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## Using ggplot2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 color = 'green',\n                 fill = 'navy') +\n  ggtitle(\"Distribution of Maths scores\")\n```\n\n::: {.cell-output-display}\n![](Ex01_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n## Using ggplot2 and group by genders\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = exam_data,\n       aes(x = MATHS,\n           fill = GENDER)) +\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 color = 'grey30')\n```\n\n::: {.cell-output-display}\n![](Ex01_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n# Plotting a simple density estimate\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = exam_data,\n       aes(x = MATHS,\n           color = GENDER)) +\n  geom_density()\n```\n\n::: {.cell-output-display}\n![](Ex01_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n# Plotting a simple boxplot with data points\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = GENDER)) +\n  geom_boxplot() +\n  geom_point(position = 'jitter',\n             size = 0.5)\n```\n\n::: {.cell-output-display}\n![](Ex01_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n# Plotting a simple violin plot together with boxplot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = GENDER)) +\n  geom_violin(fill = 'light green') + \n  geom_boxplot(alpha = 0.25) +\n  stat_summary(geom = 'point',\n               fun.y = 'mean',\n               color = 'maroon',\n               size = 3)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nℹ Please use the `fun` argument instead.\n```\n:::\n\n::: {.cell-output-display}\n![](Ex01_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n# Plotting a simple scatter plot (maths vs english)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = ENGLISH)) +\n  geom_point(color = 'pink') +\n  geom_smooth(size = 0.25)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](Ex01_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n# Plotting trellis using facet\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20) +\n  facet_wrap(~ CLASS)\n```\n\n::: {.cell-output-display}\n![](Ex01_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n# Plotting trellis using facet_grid\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20) +\n  facet_grid(~ CLASS)\n```\n\n::: {.cell-output-display}\n![](Ex01_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n# Plotting trellis boxplot using facet_grid (slides 43)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = CLASS)) +\n  geom_boxplot(alpha = 0.5) +\n  facet_grid(~ GENDER)\n```\n\n::: {.cell-output-display}\n![](Ex01_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n# Plotting trellis boxplot using facet_grid (slides 44)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = CLASS)) +\n  geom_boxplot(alpha = 0.5) +\n  facet_grid(GENDER ~ .)\n```\n\n::: {.cell-output-display}\n![](Ex01_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n# Plotting trellis boxplot using facet_grid (slides 45)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = GENDER)) +\n  geom_boxplot() +\n  facet_grid(GENDER ~ CLASS) \n```\n\n::: {.cell-output-display}\n![](Ex01_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n# Plotting boxplot by fixing y&x range\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm,\n              size = 0.5) +\n  coord_cartesian(xlim = c(0, 100),\n                  ylim = c(0, 100)) + \n  theme_classic()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](Ex01_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n# Plotting barchart with requested theme (slide 53)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = exam_data,\n       aes(y = RACE)) +\n  geom_bar() +\n  theme_minimal() +\n  theme(panel.background = element_rect(fill = 'light blue', color = 'white', size = 1, linetype = 'solid'),\n        panel.grid.major = element_line(color = 'white', linetype = 'solid'),\n        panel.grid.minor = element_line(color = 'white', linetype = 'solid'))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n```\n:::\n\n::: {.cell-output-display}\n![](Ex01_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n# Plotting barchart using requested format (slide 55)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = exam_data,\n       aes(x = reorder(RACE, RACE, function(x)-length(x)))) +\n  geom_bar() +\n  ylim(c(0,230))+\n  geom_text(stat = 'count',\n            aes(label = paste(after_stat(count), ', ', round(after_stat(count)/sum(count) * 100, 1), '%')),\n            color = 'black',\n            size = 3,\n            vjust = -0.5) +\n  xlab('Race') +\n  ylab('No. of Pupils')\n```\n\n::: {.cell-output-display}\n![](Ex01_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n\n```{.r .cell-code}\n  # theme_minimal() +\n  # theme(panel.background = element_rect(fill = 'grey80', color = 'white', size = 1, linetype = 'solid'),\n  #       panel.grid.major = element_line(color = 'white', linetype = 'solid', linewidth = 0.5),\n  #       panel.grid.minor = element_line(color = 'white', linetype = 'solid', linewidth = 0.5),\n  #       axis.title.y = element_text(angle = 0))\n```\n:::\n\n\n# Plotting barchart using requested format (slide 59)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20,\n                 fill = 'light blue',\n                 color = 'black') + \n  geom_vline(aes(xintercept = mean(MATHS, na.rm = T),\n                 color = 'red',\n                 linetype = 'dashed'),\n             show.legend = F) +\n    geom_vline(aes(xintercept = median(MATHS, na.rm = T),\n                 color = 'black',\n                 linetype = 'dashed'),\n             show.legend = F) +\n  xlab('MATHS') +\n  ylab('count')\n```\n\n::: {.cell-output-display}\n![](Ex01_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n# Plotting barchart for requested analysis (slide 60)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Don't know how to do this part... Remember to check prof's updated slides\nggplot(data = exam_data,\n       aes(x = ENGLISH,\n           fill = GENDER)) +\n  geom_histogram() +\n  facet_grid(~ GENDER) +\n  geom_histogram(aes(x = ENGLISH),\n                 alpha = 0.5) +  \n  xlab('ENGLISH') +\n  ylab('count')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](Ex01_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n",
    "supporting": [
      "Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}