[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Visual-Analytics-Applications",
    "section": "",
    "text": "This is a documentation of my full Visual Analytics and Application learning journey."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Ex01/Ex01.html",
    "href": "Hands-on_Ex/Ex01/Ex01.html",
    "title": "Hands-on Ex01: Creating Elegant Graphics with ggplot2",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\nThis p_load() function includes the function of running below commands. More effective nowadays vs the old way below. The pacman in front is to make sure even if the package pacman is not installed.\nlibrary(readr)\nlibrary(dplyr)\nlibrary(tidyr)\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Ex01/Ex01.html#using-r-graphics",
    "href": "Hands-on_Ex/Ex01/Ex01.html#using-r-graphics",
    "title": "Hands-on Ex01: Creating Elegant Graphics with ggplot2",
    "section": "3.1 Using R Graphics",
    "text": "3.1 Using R Graphics\n\nhist(exam_data$MATHS)"
  },
  {
    "objectID": "Hands-on_Ex/Ex01/Ex01.html#using-ggplot2",
    "href": "Hands-on_Ex/Ex01/Ex01.html#using-ggplot2",
    "title": "Hands-on Ex01: Creating Elegant Graphics with ggplot2",
    "section": "3.2 Using ggplot2",
    "text": "3.2 Using ggplot2\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 color = 'green',\n                 fill = 'navy') +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Ex01/Ex01.html#using-ggplot2-and-group-by-genders",
    "href": "Hands-on_Ex/Ex01/Ex01.html#using-ggplot2-and-group-by-genders",
    "title": "Hands-on Ex01: Creating Elegant Graphics with ggplot2",
    "section": "3.3 Using ggplot2 and group by genders",
    "text": "3.3 Using ggplot2 and group by genders\n\nggplot(data = exam_data,\n       aes(x = MATHS,\n           fill = GENDER)) +\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 color = 'grey30')"
  },
  {
    "objectID": "Hands-on_Ex/Ex02/Ex02.html",
    "href": "Hands-on_Ex/Ex02/Ex02.html",
    "title": "Hands-on Ex02: Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "This exercise looks into the usage of tidyverse package mainly."
  },
  {
    "objectID": "Hands-on_Ex/Ex02/Ex02.html#library-installation-and-launching",
    "href": "Hands-on_Ex/Ex02/Ex02.html#library-installation-and-launching",
    "title": "Hands-on Ex02: Beyond ggplot2 Fundamentals",
    "section": "1 Library installation and launching",
    "text": "1 Library installation and launching\nThe code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\nlibrary(pacman)\n\npacman::p_load(tidyverse, \n               ggrepel)"
  },
  {
    "objectID": "Hands-on_Ex/Ex02/Ex02.html#data-loading",
    "href": "Hands-on_Ex/Ex02/Ex02.html#data-loading",
    "title": "Hands-on Ex02: Beyond ggplot2 Fundamentals",
    "section": "2 Data Loading",
    "text": "2 Data Loading\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Ex02/Ex02.html#ggplot2-annotation",
    "href": "Hands-on_Ex/Ex02/Ex02.html#ggplot2-annotation",
    "title": "Hands-on Ex02: Beyond ggplot2 Fundamentals",
    "section": "3 ggplot2 Annotation",
    "text": "3 ggplot2 Annotation\nTo begin with, we use ggplot2 to plot some basic graphs first.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nNoticed on the overly crowded labels. To avoid text labels from being overlapping with each other, ggrepel is preferred here instead.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps"
  },
  {
    "objectID": "Hands-on_Ex/Ex02/Ex02.html#ggplot2-themes",
    "href": "Hands-on_Ex/Ex02/Ex02.html#ggplot2-themes",
    "title": "Hands-on Ex02: Beyond ggplot2 Fundamentals",
    "section": "4 ggplot2 Themes",
    "text": "4 ggplot2 Themes\n\n4.1 Eight built-in themes\ntheme_gray(), theme_bw(), theme_classic(), theme_dark(), theme_light(), theme_linedraw(), theme_minimal(), and theme_void().\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_light() +  \n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n4.2 ggtheme package\n\nlibrary(ggthemes)\n\nggthemes provides ‘ggplot2’ themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, and The Wall Street Journal, among others.\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_economist() +  \n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_excel() +  \n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_few() +  \n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_fivethirtyeight() +  \n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_solarized() +  \n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n4.3 hrbrthemes package\n\nlibrary(hrbrthemes)\n\nNOTE: Either Arial Narrow or Roboto Condensed fonts are required to use these themes.\n\n\n      Please use hrbrthemes::import_roboto_condensed() to install Roboto Condensed and\n\n\n      if Arial Narrow is not on your system, please see https://bit.ly/arialnarrow\n\n\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_ipsum_ps(axis_title_size = 18,\n                 base_size = 15,\n                 grid = \"Y\") +  \n  ggtitle(\"Distribution of Maths scores\") \n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not\nfound in Windows font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not\nfound in Windows font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not\nfound in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database"
  },
  {
    "objectID": "Hands-on_Ex/Ex02/Ex02.html#composite-plot",
    "href": "Hands-on_Ex/Ex02/Ex02.html#composite-plot",
    "title": "Hands-on Ex02: Beyond ggplot2 Fundamentals",
    "section": "5 Composite plot",
    "text": "5 Composite plot\nTo create multiple statistical graphs first.\n\np1 <- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2 <- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np3 <- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\nThere are several ggplot2 extensions provide functions to compose figure with multiple graphs.\nPatchwork is one of packages that has a very simple syntax where we can create layouts super easily.\nHere’s the general syntax that combines: - Two-Column Layout using the Plus Sign +. - Parenthesis () to create a subplot group. - Two-Row Layout using the Division Sign\n\nlibrary(patchwork)\n\n\np1 + p2 / p3\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n(p1 / p2) | p3\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nMore on how to stack or pack differently using Patchwork.\n\n5.1 Auto-tagging\npatchwork provides auto-tagging capabilities, in order to identify subplots in text:\n\n((p1 / p2) | p3) +\n  plot_annotation(tag_levels = 'I')\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n5.2 Apply themes to all subplots\n\npatchwork <- (p1 / p2) | p3\npatchwork & theme_economist()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n5.3 Place plots or graphic elements on top or below another plot\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Take-home_Ex/Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 01",
    "section": "",
    "text": "In this exercise, the basic demographic structure of Singapore top 9 biggest planning areas categorised by gender and age group is being studied.\nData used is a csv file extracted from Department of Statistics, Singapore. The population data snapshot from June 2022 is being studied mainly."
  },
  {
    "objectID": "Take-home_Ex/Ex01/Take-home_Ex01.html#data-preparation",
    "href": "Take-home_Ex/Ex01/Take-home_Ex01.html#data-preparation",
    "title": "Take-home Exercise 01",
    "section": "2 Data Preparation",
    "text": "2 Data Preparation\n\n\n\n\n2.1 Data Cleaning\nPreview the downloaded csv file, the data looks generally clean with no “Total” elements inside all columns. This is specifically checked to ensure there won’t be double counting from aggregation blended inside. Inside Tableau, if needed, total could be easily computed by summing up all the rest data.\n\n\n\n\n\nRaw data used\n\n\n\n\n\n\n2.2 Data Loading\nOpen a new Tableau workbook and import data using the csv file prepared above.\nFor easier data manipulation later on, some columns were renamed for easier understanding and convenient usage, e.g. ‘AG’ to ‘Age Group’, ‘Pop’ to ‘Population’ etc.\n\n\n\n\n\nTableau data loading"
  },
  {
    "objectID": "Take-home_Ex/Ex01/Take-home_Ex01.html#data-visualisation",
    "href": "Take-home_Ex/Ex01/Take-home_Ex01.html#data-visualisation",
    "title": "Take-home Exercise 01",
    "section": "3 Data Visualisation",
    "text": "3 Data Visualisation\nAge-sex pyramid was taught be an analytical visualisation commonly used by demographers to reveal the structure of population by gender and age group.\n\n3.1 Overall Singaporean Population Pyramid\nTwo calculated fields are created to facilitate the visualisation preparation:\n    Male:\n    if [Sex]=\"Males\"\n    then [Population]\n    end\n    \n    Female:\n    if [Sex]=\"Females\"\n    then [Population]\n    end\nTo produce the desired visualisation, follow below steps:\n\nDrag the ‘Age Group’ from Data panel into Rows bar.\nSort the ‘Age Group’ by clicking the white downwards pointing arrow, choose ‘Sort’ and sort by ‘Alphabetic’ in descending order.\nDrag the line item ‘5_to_9’ inside the worksheet from ‘Age Group’ column to one line above ‘0_to_4’. With this, the age group should have been sorted in a descending manner entirely.\nDrag the ‘Population’ from Data panel into Columns bar twice. Two ‘SUM(Population)’ should be seen in Columns’ bar. This step is to facilitate the pyramid making. Whereby the left side will be intended to use for female population visualisation and the right side will be intended to use to male population visualisation.\nRight click the axis of the ‘Population’ on the left and edit axis. Choose the option of ‘Reversed’ under ‘Scale’. This will reverse the axis on the left. Rename the axis on the left to ‘Female’.\nRight click the axis on the right. Edit the axis and rename it to ‘Male’.\n\nThere is a pyramid shape built now. Proceeding next to isolate each gender’s population from the other.\n\nCreate two newly calculated measures named ‘Male Color’ and ‘Female Color’. This is to facilitate the visualisation of pyramid later.\nMale Color: \nstr(if [Sex]=\"Males\" \nthen 1 \nelse 0 \nend)\n\nFemale Color: \nstr(if [Sex]=\"Females\" \nthen 1 \nelse 0 \nend)\nDrag the ‘Female Color’ from Data panel into Marks section under the ‘Color’ button from the first ‘SUM(Population)’. Choose a color that you would like to assign to Female population data (1). Here, color pink is used. When the data is not ‘Female’ (0), color grey is used.\nSimilarly, drag the ‘Male Color’ from Data panel and do the same but put it under under the second ‘SUM(Population)’. Choose a color that you would like to assign to Male population data (1). Here, color blue is used. When the data is not ‘Male’ (0), color grey is used to align with the color used in ‘Female Color’.\nFor better analysis usage, under ‘Marks’ section for both ‘SUM(Population)’, ‘Allow labels to overlap other marks’ is chosen under ‘Label’. This will enable us to see all population data on the chart.\nChoose ‘Entire View’ on the top menu to allow bigger chart being presented when in full screen mode.\nRename the tab with an informative title.\n\nTherefore, a population pyramid of Singapore has been completed. See below.\n\n\n\n\n\nPopulation pyramid of Singapore\n\n\n\n\n\n\n3.2 Selection of Nine Planning Areas\nFor this take-home exercise, nine planning areas are supposed to be chosen and presented on a single view.\nTo find out which nine areas to work on, it’s more of my interest to filter based on each of their total population. Below actions are taken in order to achieve that.\n\nCreate a new worksheet.\nDrag the ‘Population’ values from Data panel into Columns bar.\nDrag the ‘Planning Area’ text from Data panel into Rows bar.\nSort the ‘Planning Area’ by clicking the white downwards pointing arrow, choose ‘Sort’ and sort by ‘Field’ in descending order. Choose the field to be sorted by ‘Population’ from the drop-down list. The aggregation we use here remains ‘Sum’.\n\nThis would enable us to visualise the top planning areas according to each of their total area population. To make the list of top area more clearly, parameters and additional calculated fields are created.\nCreation of parameter ‘Top Planning Areas’.\n\n\n\n\n\nParameter: Top planning area\n\n\n\n\nCreation of set ‘Top N Planning Area’ derived from item ‘Planning Area’ from the Data panel by right clicking it:\n\n\n\n\n\nSet: Top N Planning Area\n\n\n\n\nCreation of calculated field ‘Labels’. This label is to be displayed inside the table later for easier readability.\n    if [Top N Planning Area]\n    then \"Top \" + str([Top Planning Area]) + \" Planning Areas\"\n    else \"Others\"\n    end\nWith these, below chart is completed.\n\n\n\n\n\nTop 9 planning area by total population\n\n\n\n\nFrom here, the nine areas that are chosen to study on are:\n\nBedok,\nTampines,\nJurong West,\nSengkang,\nWoodlands,\nHougang,\nYishun,\nChoa Chu Kang,\nPunggol.\n\n\n\n3.3 Trellis Display of Population Pyramid of The Nine Planning Areas\nIn this exercise, the nine planning areas are requested to be presented on a single view. To do that, a trellis display will be applied. Following below steps that will lead us to the desired output.\n\nDuplicate the worksheet ‘PA comparison of Female and Male population in Singapore broken down by age group 2022’.\nRename the worksheet to ‘Trellis comparison of Female and Male population in Top 9 Population Areas of Singapore broken down by age group 2022’.\nDrag the ‘Planning Area’ text from Data panel into Columns bar.\nDrag the ‘Planning Area’ text from Data panel into Filters section and tick the chosen nine areas only.\n\nThe trellis display is therefore completed.\n\n\n\n\n\nTop 9 planning area population pyramid\n\n\n\n\n\n\n3.4 Final Dashboard\nThe final dashboard is produced by putting together the three important worksheets. Here, three worksheets have been chosen to present together in one view to complete the whole story.\n\n\n\n\n\nTop 9 planning area population pyramid"
  },
  {
    "objectID": "Take-home_Ex/Ex01/Take-home_Ex01.html#observation-and-insights",
    "href": "Take-home_Ex/Ex01/Take-home_Ex01.html#observation-and-insights",
    "title": "Take-home Exercise 01",
    "section": "4 Observation and Insights",
    "text": "4 Observation and Insights\nThis part is the write-up requested. Words count: 447 words.\n\n4.1 “Constrictive” pyramid (or “negative growth” pyramid)\nThe population pyramid of Singapore observed from the figure above is narrowed at the bottom younger ages, typical for many developed countries in the world. Usually, country of this population pyramid type tends to have a lower birth rate and a lower death rate thanks to prevalent high level of education and accessible health care services.\nThis observation is in line with many incentive measures from the government seen, for example, policies like birth bonuses, child benefits and even tax credits.\n\n\n4.2 The population pyramid of Singapore from 2022 remains like the one from 2017.\nFrom this link shared by prof, the population pyramid of Singapore in 2022 still look very alike in how it was in 2017, despite of much effort from government on improving fertility rate.\nThis is indeed a concerning topic. Such constrictive pyramid indicates a higher dependency ratio (a ratio related to the number of children and older persons to the working-age population), which implies potential work force shortage in the future. Consequentely, that might result in seriously negative economic impact like reduction in taxation and heavier burden on health care industry.\n\n\n4.3 Females outnumber males in Singapore Based on June 2022 data.\nThis trend is observed in majority age groups. Zooming into each group, only for age 19 and below, number of males is observed to be higher. This trend is observed in majority age groups. Zooming into each group, only for age 19 and below, number of males is observed to be higher. The trend also applies to the nine areas that we have chosen to study on. Without more than sufficient research, there are some unproved personal assumptions that might lead to this result:\n\nMales tend to have a higher mortality rate especially at an older age group, mainly due to higher probability of possessing an unhealthy life habit like smoking or heavy drinking.\nA possible relatively higher rate of approval for immigration applications from foreign young females. This might account for some partial efforts from government on improving the fertility rate of Singapore.\n\n\n\n4.4 Punggol and Sengkang each has slightly different population pyramid from the rest of chosen areas’.\nThanks to the Trellis plot, a comparison between the nine areas looks much easier. From the dashboard, Punggol and Sengkang seem to have a relatively larger base (newly born babies) and middle part (working adults) than the rest. This observation tends to prove the point of view that these two areas tend to have higher percentages of young working couples and babies. Hence, Punggol has recently been dubbed as Singapore’s baby town, according to a news report from The Straits Times."
  },
  {
    "objectID": "Take-home_Ex/Ex01/Take-home_Ex01.html#reflection",
    "href": "Take-home_Ex/Ex01/Take-home_Ex01.html#reflection",
    "title": "Take-home Exercise 01",
    "section": "5 Reflection",
    "text": "5 Reflection\nThis is my first attempt on building and publishing . Along the journey, I have been learning from many of my mistakes. E.g. only after building the whole dashboard, I realised there was better data set for me to use and work on (csv preferred over xlsx, if both available). And the very first draft of dashboard looked decent but was only as good as a graph that can be viewed but cannot be analyzed with. Countless attempts of rework and revised versions were created, with much practice time invested.\nNevertheless, I am excited of this continuous learning journey ahead. I look forward to improving my analytics skills using Tableau and R to further improve this exercise with more depth."
  },
  {
    "objectID": "Take-home_Ex/Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise 02",
    "section": "",
    "text": "The requirement of this exercise is to critic the submission that revealed demographic structure of Singapore at nine planning areas from one of my classmate in terms of clarity and aesthetics, prepare a sketch for the alternative design by using the data visualisation design principles and best practices learned from Lesson 1 and 2. Eventually, the original design will be remade below by using ggplot2, ggplot2 extensions and tidyverse packages from R.\nOriginal dashboard prepared could be retrieved through this link.\nBelow is a snapshot of the dashboard.\n\n\n\n\n\n\n\n\nOriginal Dashboard"
  },
  {
    "objectID": "Take-home_Ex/Ex02/Take-home_Ex02.html#clarity",
    "href": "Take-home_Ex/Ex02/Take-home_Ex02.html#clarity",
    "title": "Take-home Exercise 02",
    "section": "2.1 Clarity",
    "text": "2.1 Clarity\n\n2.1.1 Missing a well worded title\nBy looking at the dashboard itself in full screen mode, there are insufficient information on what message this chart is trying to relay.\nAdditionally, nine planning areas’ demographic structure has been shown indeed. The tableau public dashboard, however, is published using the name of ‘Singapore Population distribution by age’. Misunderstanding might be raised as people might wrongly conclude that there are only nine areas in total in Singapore.\n\n\n2.1.2 Misalignment in x-axis across nine plots\nFor the chosen nine areas’ plots, some different scales are observed in the x-axis (population count). Misleading visual representation originated from the graph might result in wrong conclusion being made.\n\n\n2.1.3 Weak analytics capabilities\nFrom the dashboard, we are able to tell Maybe we can group certain age groups to make a better visualization?"
  },
  {
    "objectID": "Take-home_Ex/Ex02/Take-home_Ex02.html#aesthetics",
    "href": "Take-home_Ex/Ex02/Take-home_Ex02.html#aesthetics",
    "title": "Take-home Exercise 02",
    "section": "2.2 Aesthetics",
    "text": "2.2 Aesthetics\n\n2.2.1 Usage of an unrecommended color\nInside the dashboard, males population is being represented with a color similar to dark khaki. A color like this that is similar to ‘puke yellow’ is discouraged to be used, according to the class discussion during week 2 lecture.\n\n\n2.2.2 Over-packed y-axis ticks\nGiven the granularity of this study, there are many age groups to be presented on the y-axis. However, the y-axis on the current dashboard is too packed with little to no space in between."
  },
  {
    "objectID": "Take-home_Ex/Ex02/Take-home_Ex02.html#data-source",
    "href": "Take-home_Ex/Ex02/Take-home_Ex02.html#data-source",
    "title": "Take-home Exercise 02",
    "section": "4.1 Data source",
    "text": "4.1 Data source\nFor this exercise, the data source remained the same as what was used in exercise 01."
  },
  {
    "objectID": "Take-home_Ex/Ex02/Take-home_Ex02.html#libraries-to-be-used",
    "href": "Take-home_Ex/Ex02/Take-home_Ex02.html#libraries-to-be-used",
    "title": "Take-home Exercise 02",
    "section": "4.2 Libraries to be used:",
    "text": "4.2 Libraries to be used:\nIn this exercise, main libraries to be used are listed below. pacman is used to check on and ensure the installation of packages.\n\nlibrary(pacman)\n\npacman::p_load(tidyverse,\n               ggplot2,\n               ggrepel,\n               ggthemes,\n               patchwork,\n               dplyr)"
  },
  {
    "objectID": "Take-home_Ex/Ex02/Take-home_Ex02.html#data-loading",
    "href": "Take-home_Ex/Ex02/Take-home_Ex02.html#data-loading",
    "title": "Take-home Exercise 02",
    "section": "4.3 Data loading:",
    "text": "4.3 Data loading:\nLoad the csv file below for our usage later.\n\npopulation <- read_csv('Data/SG_Population_Jun2022.csv')\n\nRows: 75696 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, FA\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Take-home_Ex/Ex02/Take-home_Ex02.html#data-wrangling",
    "href": "Take-home_Ex/Ex02/Take-home_Ex02.html#data-wrangling",
    "title": "Take-home Exercise 02",
    "section": "4.4 Data wrangling",
    "text": "4.4 Data wrangling\nAs a good practice, the structure of the raw data is inspected to identify if any data manipulation would be beneficial for our usage later on:\n\nstr(population)\n\nspc_tbl_ [75,696 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ PA  : chr [1:75696] \"Ang Mo Kio\" \"Ang Mo Kio\" \"Ang Mo Kio\" \"Ang Mo Kio\" ...\n $ SZ  : chr [1:75696] \"Ang Mo Kio Town Centre\" \"Ang Mo Kio Town Centre\" \"Ang Mo Kio Town Centre\" \"Ang Mo Kio Town Centre\" ...\n $ AG  : chr [1:75696] \"0_to_4\" \"0_to_4\" \"0_to_4\" \"0_to_4\" ...\n $ Sex : chr [1:75696] \"Males\" \"Males\" \"Males\" \"Males\" ...\n $ FA  : chr [1:75696] \"<= 60\" \">60 to 80\" \">80 to 100\" \">100 to 120\" ...\n $ Pop : num [1:75696] 0 10 20 60 10 0 0 0 20 50 ...\n $ Time: num [1:75696] 2022 2022 2022 2022 2022 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   PA = col_character(),\n  ..   SZ = col_character(),\n  ..   AG = col_character(),\n  ..   Sex = col_character(),\n  ..   FA = col_character(),\n  ..   Pop = col_double(),\n  ..   Time = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n\nFor easier data manipulation and better visualisation effect, the raw data is duplicated below.\n\npop_temp  <- population\n\nHere the format of Age Group column (‘AG’) will be transformed from text to factor. This would enable us to keep the age groups arranged in a sorted manner that is desired.\n\npop_temp$AG <- as.factor(pop_temp$AG)\nlevels(pop_temp$AG)\n\n [1] \"0_to_4\"      \"10_to_14\"    \"15_to_19\"    \"20_to_24\"    \"25_to_29\"   \n [6] \"30_to_34\"    \"35_to_39\"    \"40_to_44\"    \"45_to_49\"    \"5_to_9\"     \n[11] \"50_to_54\"    \"55_to_59\"    \"60_to_64\"    \"65_to_69\"    \"70_to_74\"   \n[16] \"75_to_79\"    \"80_to_84\"    \"85_to_89\"    \"90_and_over\"\n\n\nAs can be seen above, the age group ‘5_to_9’ is not falling in the right place. To correct this, a manual swap is done below.\n\npop_temp$AG <- factor(pop_temp$AG,levels(pop_temp$AG)[c(1,10,2:9,11:19)])\nlevels(pop_temp$AG)\n\n [1] \"0_to_4\"      \"5_to_9\"      \"10_to_14\"    \"15_to_19\"    \"20_to_24\"   \n [6] \"25_to_29\"    \"30_to_34\"    \"35_to_39\"    \"40_to_44\"    \"45_to_49\"   \n[11] \"50_to_54\"    \"55_to_59\"    \"60_to_64\"    \"65_to_69\"    \"70_to_74\"   \n[16] \"75_to_79\"    \"80_to_84\"    \"85_to_89\"    \"90_and_over\"\n\n\nFor the ease of visualisation the population of the two genders side by side, an extra column is prepared such that the population of females would be recorded as values with negative signs, while the population of males would be in positive signs.\nConsequently, the female population would be on the left-hand-side and the male population would be on the right-hand-side.\n\npop_temp$Pop_abs <- ifelse(pop_temp$Sex == \"Males\",\n                        pop_temp$Pop,\n                        -1*pop_temp$Pop)"
  },
  {
    "objectID": "Take-home_Ex/Ex02/Take-home_Ex02.html#visualisation",
    "href": "Take-home_Ex/Ex02/Take-home_Ex02.html#visualisation",
    "title": "Take-home Exercise 02",
    "section": "4.5 Visualisation",
    "text": "4.5 Visualisation\n\n4.5.1 Population pyramid of Singapore\nggplot is the main package that is used to plot the desired chart.\n\np1 <- \nggplot(data=pop_temp,\n       aes(x=AG,\n           y=Pop_abs,\n           fill = Sex)) +\n  geom_bar(data=subset(pop_temp, Sex == \"Males\"),stat = \"identity\") +\n    geom_bar(data=subset(pop_temp, Sex == \"Females\"),stat = \"identity\") +\n  xlab(\"Age Group\") +\n  ylab(NULL) +\n  coord_flip() +\n  scale_y_continuous(breaks = seq(-200000, 200000, 50000), \n                      labels = paste0(as.character(c(seq(200, 0, -50), seq(5, 200, 50))),\"k\")) + \n  ggtitle(\"Females vs Males population of Singapore by age group 2022\") +\n  labs(caption = \"Demographic information as of Jun 2022\") +\n  scale_fill_discrete(name=\"\") +\n  theme_economist() + \n  theme(legend.position = \"bottom\",\n        plot.title = element_text(size = 15,\n                                  hjust = 0.5,\n                                  margin = margin(0,0,10,0)),\n        axis.title.y = element_text(vjust = 2.5))\n\np1\n\n\n\n\nWith the overall Singapore population pyramid available, the next question to answer would be: which are the nine areas that are to be studied for this exercise?\nAggregate the population by planning areas and duplicate the required data and save as an individual dataset.\n\npop_temp_pa <- pop_temp %>% \n  group_by(PA) %>% \n  summarise(total_pop = sum(Pop)) %>% \n  arrange(desc(total_pop))\n\n\n\n4.5.2 Population by planning areas\nPopulation of each area is then displayed using bar chart.\n\np2 <- \nggplot(data=pop_temp_pa,\n       aes(x=reorder(PA, +total_pop),\n           y=total_pop)) + \n  geom_col() +\n  xlab(NULL) +\n  ylab(NULL) +\n  ggtitle(\"Population of Singapore by planning areas 2022\") +\n  labs(caption = \"Demographic information as of Jun 2022\") +\n  coord_flip() +\n  scale_y_continuous(breaks = seq(0, 300000, 50000), \n                      labels = paste0(as.character(c(seq(0, 300, 50))),\"k\"),\n                     expand = c(0, 0)) +\n  scale_x_discrete(expand = c(0.01, 0)) +\n  theme_economist() +\n  theme(plot.title = element_text(size = 15,\n                                  hjust = 0.5,\n                                  margin = margin(0,0,10,0)),\n        axis.text.y = element_text(size = 10))\n\np2\n\n\n\n\n\n\n4.5.3 Population pyramid of nine selected planning areas\nUsing the above chart, it is obvious that the top nine planning areas with largest population are:\n\nBedok,\nTampines,\nJurong West,\nSengkang,\nWoodlands,\nHougang,\nYishun,\nChoa Chu Kang,\nPunggol.\n\nConsidering their rather significant population numbers, further study of each of their population pyramid would be conducted on them.\n\ntop_9 = c(\"Bedok\",\n          \"Tampines\",\n          \"Jurong West\",\n          \"Sengkang\",\n          \"Woodlands\",\n          \"Hougang\",\n          \"Yishun\",\n          \"Choa Chu Kang\",\n          \"Punggol\")\n\npop_top_9 = pop_temp %>% \n              filter(pop_temp$PA %in% top_9)\n\nBy filtering the overall Singapore data set and following the same approach on plotting the overall Singapore population pyramid, the nine chosen areas’ population pyramid are therefore presented below:\n\np3 <- \nggplot(data=pop_top_9,\n       aes(x=AG,\n           y=Pop_abs,\n           fill = Sex)) +\n  geom_bar(data=pop_top_9,stat = \"identity\") +\n  xlab(\"Age Group\") +\n  ylab(NULL) +\n  coord_flip() +\n  facet_wrap( ~ PA) + \n  scale_y_continuous(breaks = seq(-15000, 15000, 5000), \n                     labels = paste0(as.character(c(seq(15, 0, -5), seq(5, 15, 5))),\"k\")) + \n  ggtitle(\"Females vs Males population in Top 9 Population Areas of Singapore by age group 2022\") +\n  labs(caption = \"Demographic information as of Jun 2022\") +\n  scale_fill_discrete(name=\"\") +\n  theme_economist() + \n  theme(legend.position = \"bottom\",\n        plot.title = element_text(size = 15,\n                                  hjust = 0.5,\n                                  margin = margin(0,0,10,0)),\n        # axis.title.y = element_text(margin = margin(t = 0, r = 0, b = 0, l = 10)),\n        axis.title.y = element_text(vjust = 2.5),\n        strip.text = element_text(vjust = 1))\n\np3\n\n\n\n\n\n\n4.5.4 Final dashboard\nTo complete the story within one dashboard, three graphs above are composed into one using Patchwork.\n\n(p1 + p2) / p3"
  }
]