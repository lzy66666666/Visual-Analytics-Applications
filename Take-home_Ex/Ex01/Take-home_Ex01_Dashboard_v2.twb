<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top Planning Areas' datatype='integer' default-format='N' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='9'>
        <calculation class='tableau' formula='9' />
        <range granularity='1' max='20' min='1' />
      </column>
    </datasource>
    <datasource caption='2022M&amp;F (SG_Residents_Jun2022_Merged)' inline='true' name='federated.0ewukna0yphxib12ymrcj107z9nr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SG_Residents_Jun2022_Merged' name='excel-direct.1u8o29g0dn23qa1392cmj0b11ppt'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='G:/My Drive/SMU MITB/ISSS608 Visual Analytics and Applications/lzy66666666/Visual-Analytics-Applications/Take-home_Ex/Ex01/Data/SG_Residents_Jun2022_Merged.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1u8o29g0dn23qa1392cmj0b11ppt' name='2022M&amp;F' table='[&apos;2022M&amp;F$&apos;]' type='table'>
          <columns gridOrigin='A1:F10001:no:A1:F2147483647:0' header='yes' outcome='2'>
            <column datatype='string' name='Planning Area' ordinal='0' />
            <column datatype='string' name='Subzone' ordinal='1' />
            <column datatype='string' name='Age Group' ordinal='2' />
            <column datatype='string' name='Type of Dwelling' ordinal='3' />
            <column datatype='integer' name='2022' ordinal='4' />
            <column datatype='string' name='Gender' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1u8o29g0dn23qa1392cmj0b11ppt' name='2022M&amp;F' table='[&apos;2022M&amp;F$&apos;]' type='table'>
          <columns gridOrigin='A1:F10001:no:A1:F2147483647:0' header='yes' outcome='2'>
            <column datatype='string' name='Planning Area' ordinal='0' />
            <column datatype='string' name='Subzone' ordinal='1' />
            <column datatype='string' name='Age Group' ordinal='2' />
            <column datatype='string' name='Type of Dwelling' ordinal='3' />
            <column datatype='integer' name='2022' ordinal='4' />
            <column datatype='string' name='Gender' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2022M&amp;F]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F10001:no:A1:F2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Planning Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Planning Area]</local-name>
            <parent-name>[2022M&amp;F]</parent-name>
            <remote-alias>Planning Area</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022M&amp;F_86302E625F3D4323BBAC309560376B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Subzone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Subzone]</local-name>
            <parent-name>[2022M&amp;F]</parent-name>
            <remote-alias>Subzone</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022M&amp;F_86302E625F3D4323BBAC309560376B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Age Group]</local-name>
            <parent-name>[2022M&amp;F]</parent-name>
            <remote-alias>Age Group</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022M&amp;F_86302E625F3D4323BBAC309560376B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of Dwelling</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type of Dwelling]</local-name>
            <parent-name>[2022M&amp;F]</parent-name>
            <remote-alias>Type of Dwelling</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022M&amp;F_86302E625F3D4323BBAC309560376B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2022</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2022]</local-name>
            <parent-name>[2022M&amp;F]</parent-name>
            <remote-alias>2022</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022M&amp;F_86302E625F3D4323BBAC309560376B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[2022M&amp;F]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022M&amp;F_86302E625F3D4323BBAC309560376B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[2022]' role='measure' type='quantitative' />
      <column caption='Subset Labels' datatype='string' name='[Calculation_1131247984952020992]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Top N Planning Area]&#13;&#10;then &quot;Top &quot; + str([Parameters].[Parameter 1]) + &quot; Planning Areas&quot;&#13;&#10;else &quot;Others&quot;&#13;&#10;END' />
      </column>
      <column caption='Female' datatype='integer' name='[Calculation_609674852744388608]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Gender]=&quot;FEMALE&quot;&#13;&#10;THEN[2022]&#13;&#10;END' />
      </column>
      <column caption='Male' datatype='integer' name='[Calculation_609674852744601601]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Gender]=&quot;MALE&quot;&#13;&#10;then [2022]&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Planning Area]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='2022M&amp;F' datatype='table' name='[__tableau_internal_object_id__].[2022M&amp;F_86302E625F3D4323BBAC309560376B5E]' role='measure' type='quantitative' />
      <group caption='Top N Planning Area' name='[Top N Planning Area]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([2022])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Planning Area]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Planning Area' />
        <field-sort-custom-order field='Subzone' />
        <field-sort-custom-order field='Age Group' />
        <field-sort-custom-order field='Type of Dwelling' />
        <field-sort-custom-order field='2022' />
        <field-sort-custom-order field='Calculation_609674852744601601' />
        <field-sort-custom-order field='Calculation_609674852744388608' />
        <field-sort-custom-order field='Gender' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top Planning Areas' datatype='integer' default-format='N' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='9'>
          <calculation class='tableau' formula='9' />
          <range granularity='1' max='20' min='1' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='2022M&amp;F' id='2022M&amp;F_86302E625F3D4323BBAC309560376B5E'>
            <properties context=''>
              <relation connection='excel-direct.1u8o29g0dn23qa1392cmj0b11ppt' name='2022M&amp;F' table='[&apos;2022M&amp;F$&apos;]' type='table'>
                <columns gridOrigin='A1:F10001:no:A1:F2147483647:0' header='yes' outcome='2'>
                  <column datatype='string' name='Planning Area' ordinal='0' />
                  <column datatype='string' name='Subzone' ordinal='1' />
                  <column datatype='string' name='Age Group' ordinal='2' />
                  <column datatype='string' name='Type of Dwelling' ordinal='3' />
                  <column datatype='integer' name='2022' ordinal='4' />
                  <column datatype='string' name='Gender' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Population Pyramid_SG_2022'>
      <table>
        <view>
          <datasources>
            <datasource caption='2022M&amp;F (SG_Residents_Jun2022_Merged)' name='federated.0ewukna0yphxib12ymrcj107z9nr' />
          </datasources>
          <datasource-dependencies datasource='federated.0ewukna0yphxib12ymrcj107z9nr'>
            <column datatype='integer' name='[2022]' role='measure' type='quantitative' />
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column caption='Female' datatype='integer' name='[Calculation_609674852744388608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Gender]=&quot;FEMALE&quot;&#13;&#10;THEN[2022]&#13;&#10;END' />
            </column>
            <column caption='Male' datatype='integer' name='[Calculation_609674852744601601]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Gender]=&quot;MALE&quot;&#13;&#10;then [2022]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subzone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type of Dwelling]' role='dimension' type='nominal' />
            <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subzone]' derivation='None' name='[none:Subzone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Dwelling]' derivation='None' name='[none:Type of Dwelling:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_609674852744388608]' derivation='Sum' name='[sum:Calculation_609674852744388608:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_609674852744601601]' derivation='Sum' name='[sum:Calculation_609674852744601601:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Age Group:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Age Group:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Age Group:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;90 &amp; Over&quot;</bucket>
              <bucket>&quot;85 - 89&quot;</bucket>
              <bucket>&quot;80 - 84&quot;</bucket>
              <bucket>&quot;75 - 79&quot;</bucket>
              <bucket>&quot;70 - 74&quot;</bucket>
              <bucket>&quot;65 - 69&quot;</bucket>
              <bucket>&quot;60 - 64&quot;</bucket>
              <bucket>&quot;55 - 59&quot;</bucket>
              <bucket>&quot;50 - 54&quot;</bucket>
              <bucket>&quot;45 - 49&quot;</bucket>
              <bucket>&quot;40 - 44&quot;</bucket>
              <bucket>&quot;35 - 39&quot;</bucket>
              <bucket>&quot;30 - 34&quot;</bucket>
              <bucket>&quot;25 - 29&quot;</bucket>
              <bucket>&quot;20 - 24&quot;</bucket>
              <bucket>&quot;15 - 19&quot;</bucket>
              <bucket>&quot;10 - 14&quot;</bucket>
              <bucket>&quot;5 - 9&quot;</bucket>
              <bucket>&quot;0 - 4&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Subzone:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Subzone:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Subzone:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]'>
            <groupfilter function='member' level='[none:Type of Dwelling:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff9da7' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff9da7' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744601601:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</rows>
        <cols>([federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk] + [federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744601601:qk])</cols>
      </table>
      <simple-id uuid='{F8B8EE15-3E2E-4ACF-87EE-6CF8448C4AB5}' />
    </worksheet>
    <worksheet name='Population Pyramid_Top_9_Area_SG_2022'>
      <table>
        <view>
          <datasources>
            <datasource caption='2022M&amp;F (SG_Residents_Jun2022_Merged)' name='federated.0ewukna0yphxib12ymrcj107z9nr' />
          </datasources>
          <datasource-dependencies datasource='federated.0ewukna0yphxib12ymrcj107z9nr'>
            <column datatype='integer' name='[2022]' role='measure' type='quantitative' />
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column caption='Female' datatype='integer' name='[Calculation_609674852744388608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Gender]=&quot;FEMALE&quot;&#13;&#10;THEN[2022]&#13;&#10;END' />
            </column>
            <column caption='Male' datatype='integer' name='[Calculation_609674852744601601]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Gender]=&quot;MALE&quot;&#13;&#10;then [2022]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Planning Area]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subzone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type of Dwelling]' role='dimension' type='nominal' />
            <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Planning Area]' derivation='None' name='[none:Planning Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subzone]' derivation='None' name='[none:Subzone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Dwelling]' derivation='None' name='[none:Type of Dwelling:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_609674852744388608]' derivation='Sum' name='[sum:Calculation_609674852744388608:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_609674852744601601]' derivation='Sum' name='[sum:Calculation_609674852744601601:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Age Group:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Age Group:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Age Group:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;90 &amp; Over&quot;</bucket>
              <bucket>&quot;85 - 89&quot;</bucket>
              <bucket>&quot;80 - 84&quot;</bucket>
              <bucket>&quot;75 - 79&quot;</bucket>
              <bucket>&quot;70 - 74&quot;</bucket>
              <bucket>&quot;65 - 69&quot;</bucket>
              <bucket>&quot;60 - 64&quot;</bucket>
              <bucket>&quot;55 - 59&quot;</bucket>
              <bucket>&quot;50 - 54&quot;</bucket>
              <bucket>&quot;45 - 49&quot;</bucket>
              <bucket>&quot;40 - 44&quot;</bucket>
              <bucket>&quot;35 - 39&quot;</bucket>
              <bucket>&quot;30 - 34&quot;</bucket>
              <bucket>&quot;25 - 29&quot;</bucket>
              <bucket>&quot;20 - 24&quot;</bucket>
              <bucket>&quot;15 - 19&quot;</bucket>
              <bucket>&quot;10 - 14&quot;</bucket>
              <bucket>&quot;5 - 9&quot;</bucket>
              <bucket>&quot;0 - 4&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Bedok&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Choa Chu Kang&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Hougang&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Jurong West&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Punggol&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Sengkang&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Tampines&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Woodlands&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Yishun&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Subzone:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Subzone:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Subzone:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]'>
            <groupfilter function='member' level='[none:Type of Dwelling:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff9da7' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff9da7' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744601601:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</rows>
        <cols>([federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk] + [federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744601601:qk])</cols>
      </table>
      <simple-id uuid='{7DAF7851-00AD-4AD2-93DD-AC0BEFB8DFF0}' />
    </worksheet>
    <worksheet name='Total_Population_2022'>
      <table>
        <view>
          <datasources>
            <datasource caption='2022M&amp;F (SG_Residents_Jun2022_Merged)' name='federated.0ewukna0yphxib12ymrcj107z9nr' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top Planning Areas' datatype='integer' default-format='N' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='9'>
              <calculation class='tableau' formula='9' />
              <range granularity='1' max='20' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ewukna0yphxib12ymrcj107z9nr'>
            <column datatype='integer' name='[2022]' role='measure' type='quantitative' />
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column caption='Subset Labels' datatype='string' name='[Calculation_1131247984952020992]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Top N Planning Area]&#13;&#10;then &quot;Top &quot; + str([Parameters].[Parameter 1]) + &quot; Planning Areas&quot;&#13;&#10;else &quot;Others&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Planning Area]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subzone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type of Dwelling]' role='dimension' type='nominal' />
            <column-instance column='[Top N Planning Area]' derivation='InOut' name='[io:Top N Planning Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1131247984952020992]' derivation='None' name='[none:Calculation_1131247984952020992:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Planning Area]' derivation='None' name='[none:Planning Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subzone]' derivation='None' name='[none:Subzone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Dwelling]' derivation='None' name='[none:Type of Dwelling:nk]' pivot='key' type='nominal' />
            <column-instance column='[2022]' derivation='Sum' name='[sum:2022:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]'>
            <groupfilter function='member' level='[none:Age Group:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Gender:nk]'>
            <groupfilter function='member' level='[none:Gender:nk]' member='&quot;TOTAL&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Planning Area:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Planning Area&quot;' />
                <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Planning Area:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]' direction='DESC' using='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:2022:qk]' />
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]'>
            <groupfilter function='member' level='[none:Subzone:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]'>
            <groupfilter function='member' level='[none:Type of Dwelling:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Gender:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.0ewukna0yphxib12ymrcj107z9nr].[io:Top N Planning Area:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ewukna0yphxib12ymrcj107z9nr].[io:Top N Planning Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ewukna0yphxib12ymrcj107z9nr].[io:Top N Planning Area:nk] / ([federated.0ewukna0yphxib12ymrcj107z9nr].[none:Calculation_1131247984952020992:nk] / [federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]))</rows>
        <cols>[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:2022:qk]</cols>
      </table>
      <simple-id uuid='{4ADECA7A-5ED5-4E7B-9219-169EA754B1BC}' />
    </worksheet>
    <worksheet name='Trellis_Population Pyramid_Top_9_Area_SG_2022'>
      <table>
        <view>
          <datasources>
            <datasource caption='2022M&amp;F (SG_Residents_Jun2022_Merged)' name='federated.0ewukna0yphxib12ymrcj107z9nr' />
          </datasources>
          <datasource-dependencies datasource='federated.0ewukna0yphxib12ymrcj107z9nr'>
            <column datatype='integer' name='[2022]' role='measure' type='quantitative' />
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column caption='Female' datatype='integer' name='[Calculation_609674852744388608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Gender]=&quot;FEMALE&quot;&#13;&#10;THEN[2022]&#13;&#10;END' />
            </column>
            <column caption='Male' datatype='integer' name='[Calculation_609674852744601601]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Gender]=&quot;MALE&quot;&#13;&#10;then [2022]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Planning Area]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subzone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type of Dwelling]' role='dimension' type='nominal' />
            <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Planning Area]' derivation='None' name='[none:Planning Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subzone]' derivation='None' name='[none:Subzone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Dwelling]' derivation='None' name='[none:Type of Dwelling:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_609674852744388608]' derivation='Sum' name='[sum:Calculation_609674852744388608:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_609674852744601601]' derivation='Sum' name='[sum:Calculation_609674852744601601:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Age Group:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Age Group:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Age Group:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;90 &amp; Over&quot;</bucket>
              <bucket>&quot;85 - 89&quot;</bucket>
              <bucket>&quot;80 - 84&quot;</bucket>
              <bucket>&quot;75 - 79&quot;</bucket>
              <bucket>&quot;70 - 74&quot;</bucket>
              <bucket>&quot;65 - 69&quot;</bucket>
              <bucket>&quot;60 - 64&quot;</bucket>
              <bucket>&quot;55 - 59&quot;</bucket>
              <bucket>&quot;50 - 54&quot;</bucket>
              <bucket>&quot;45 - 49&quot;</bucket>
              <bucket>&quot;40 - 44&quot;</bucket>
              <bucket>&quot;35 - 39&quot;</bucket>
              <bucket>&quot;30 - 34&quot;</bucket>
              <bucket>&quot;25 - 29&quot;</bucket>
              <bucket>&quot;20 - 24&quot;</bucket>
              <bucket>&quot;15 - 19&quot;</bucket>
              <bucket>&quot;10 - 14&quot;</bucket>
              <bucket>&quot;5 - 9&quot;</bucket>
              <bucket>&quot;0 - 4&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Bedok&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Choa Chu Kang&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Hougang&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Jurong West&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Punggol&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Sengkang&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Tampines&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Woodlands&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Yishun&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Subzone:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Subzone:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Subzone:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]'>
            <groupfilter function='member' level='[none:Type of Dwelling:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff9da7' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff9da7' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744601601:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</rows>
        <cols>([federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk] * ([federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk] + [federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744601601:qk]))</cols>
      </table>
      <simple-id uuid='{0B5033C4-C90F-4588-A801-1E102D008DBC}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='SG_Population Pyramid'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49000' id='3' name='Population Pyramid_SG_2022' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49000' id='5' name='Trellis_Population Pyramid_Top_9_Area_SG_2022' w='98400' x='800' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='24' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Population Pyramid_SG_2022' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='Trellis_Population Pyramid_Top_9_Area_SG_2022' w='98400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6C9422BB-DB1B-4F24-837E-BAFB253CF1F0}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Population Pyramid_SG_2022'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2BED518B-E640-43F9-A7BD-924E7E0A7F28}' />
    </window>
    <window class='worksheet' name='Total_Population_2022'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0ewukna0yphxib12ymrcj107z9nr].[io:Top N Planning Area:nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[io:Top N Planning Area:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Calculation_1131247984952020992:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Gender:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F33F9666-F926-4B7B-9E12-FF2825A93581}' />
    </window>
    <window class='worksheet' name='Population Pyramid_Top_9_Area_SG_2022'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='248'>
            <card param='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A89DDAF9-3AAB-40BA-BC9A-9C4FE85809BD}' />
    </window>
    <window class='worksheet' name='Trellis_Population Pyramid_Top_9_Area_SG_2022'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A27762D9-7BB0-406D-9F9F-05248CBE1070}' />
    </window>
    <window class='dashboard' name='SG_Population Pyramid'>
      <viewpoints>
        <viewpoint name='Population Pyramid_SG_2022'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Trellis_Population Pyramid_Top_9_Area_SG_2022'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D139CF1D-EA60-43DE-B019-7CD4AAAE9BC9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Population Pyramid_SG_2022' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Population Pyramid_Top_9_Area_SG_2022' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAf/0lEQVR4nO3dSXAc15ng8X9m1r4AKOw7CIAkCIDgAm7iKooSRS12W1a3O9pqRdvudnRM
      xJzn1Bef5zgxEzEx4fHYPXbLPXbbli1rMyVxA0AS4AoSxEIQxL7WAqD2rMycQ4HUBopQCKws
      sN4vAocCkFUvgfzyZb735fckwzAMBCFHyWY3QBDMJAJAyGkiAIScJgJAyGlPfQAYhsHk5KTZ
      zRCy1FMfAACJRMLsJghZKicCQBAeRQSAkNNEAAg5TQSAkNNEAAg5TQSAkNNEAAg5TQSAkNNE
      AAg5TQSAkNNEAAg5TVrtibCJiQmSyaQZ7XkiwuEwHo/nib3/gz+hJElP7DO+KV3XkeXsPt+Z
      0cZVA+BpYhgGIyMjNDQ0PLHPSCaTyLKMxWJ5Yp/xTcXjcex2e1YHaSwWw+l0ZvQzs/uUIAhP
      mAgAIaetW5+tJZa5dfEM1+4tYMsr59lTL1LhiNL13p8YmI1TtHkPLxxqw22TwUgx0dvJxz2D
      JA0Pz3/ve9TnKQAYeorJ/st09AwQ0RRqW5/h8J6tOJX1aqkgfGrdAiCy6CfsqOX7//AKqYXr
      dN2cxlc9SqDoMH9/qpjr57uYCUVoLPWCEWfEL/Pq997EMXGGzln1YQCkEiEG7y1x5LU3qHAk
      ud5xlqHZGnZUZvbaUMgN6xYANpuVyPx9rnTHschxlmfizNkj1DTVYrfCphIf02oM8ILkpr3e
      xrnrdygyimg/ZHv4PmpsGqmolUqvHUmyU9NUy/DEDDcGB8hvP0mVNsW5wSUObs2n+0IH9xYS
      lDW2c+JYMWf/eAcbs8QqD/LK3rr12jXhKbZu9wCO/HIO7N9NvtuFJ8+GjA1FAn1ljOmzY01G
      KsK9gIE7uYBaUEJs9A7j85H0DyUJDIOHv27oSJKF4poS/BNzzAdClBb6mOjvoXd4Hi0V5e61
      q8zGIRVX2XTgFV7aU7teuyU85dYtAAwd7PllNLdsxbsUwL61gZJSLxP9I8STEUbmA3it6cuY
      2OIygbjOvsP7MCYvc+VugsIiNwBWRwVG4DYTS3H0xCL374zjri6htLiS8PIMC9PzFFWUodvy
      2PfCa/zjj/+Zf/6n71BqAVdJHfVlechZPNQnZJf1G7jWovR1fsT1kQCu8m28erIQm7SDst4/
      89Yvo5S3HmCXL32Q270ePLFpfv3WEMV1WyhQFvH7I7hL3FjsBTQ3FdPxp19zWrXQsOsQO8oc
      WPFRnOhm1NJCs1umcFM9n3xyhv9zWaWoqpnjJxqx27N3HF7ITmIibB2IibD1ISbCBCHDRAAI
      OU0EgJDTRAAIOU0EgJDTRAAIOc2UcTs1GqD77EcMTC2juIs5/sorVFqH+dl/+xC5yImjbAuv
      PH+YQtcqzVMj3O6+QHf/BIbVy56jL9LoDfLJR+eZj0JRw25OHmzFaRWxLTyeKQGwHJpB9TTz
      9z9qJn7vHJdHI1QWB6k9+QYvtRd95bbq0gz3EkW88cOTpIKT9PTeZa4gROkzr/NypYU7HReZ
      isZpzHdlaG+EjcyUAPDklWHXuunqDJJaVtly1Et8dIGZSZ0u1UZVfRNVJV6UVeZsrPml1Fgn
      uNjZgZFKkF+zl3zucPV6F+qEh6R/DOb30Jif+f0SNh5TrhO0VBJJcVFQUECeQyO4mMBes4/9
      jQV4HHDjymX8y+ma/gt3zvHTn/6Us/0LAOipJEnJSkGBjzyXk1g4hLuunUM7NlHo8+FxuHHY
      vurTBeFTpvQAS6EJYpZK9rTUkxgL8v7ILNV1MlUNTXiUGIv+i0TjKcizU9x8jB83H3u4bSzg
      Z0Gz8kJzC/ryNOc6+4k1leOraKAotcDZATcthSIChLUxJQAKSxtwDp3jX39+DpungmdPlWOL
      3Of0f/xfQkmJmu2HKCtcPSfEWVJN4+QYv/7FzzAcPnYffg6rOs/pt08zpzvYuvsIZS4RAMLa
      iGS4dSCS4daHSIYThAwTASDkNBEAQk4TASDkNBEAQk4TASDkNFPG7ZIRP5fPnGZwJoLi9PHs
      q9+mWprij2+fxp+U2LTzGMd2N2JfrRqcGqb30nmuDE6hW9y0HzlFW4MPxUjS+8G/c3a5ih+9
      dgK3NeO7JWxApgRAeGkWLa+VN19qJj5yjsvjy0ihXqqe+1u+XaTS0XWFYLiG8vwvT2ipS7OM
      qiW88cNTpEKT9NwcJlm/B22ynymlls1l4sgX1s6cZDhvGU6tmwvnF9CiKbYdszHfmc/mag9W
      Q6Uo34saS8AqAWDNL6XWNknH+bMYWori+n1YEsvcGFlm5/Z67gxPmLBHwkZlyj1ASo2jKx7K
      yssocmvMh5JI6Gg6GKS/ZDk9Y/nFZDhNTRA1LJSVVVCc5yEc8jM3coOoowxJjRGNRonEnp7F
      PYQny5znARaniCll7NnaQMI+x/v3lzlUEKZvOMDBCo05/xLlWx0AX0qGiwcD+DUL7Vu2oi1N
      ca7rFrMFFoLTNzg3FGFiPoSjvIXnd1SasWvCBmNOMlxZI97hc/zy5+ex5lXx3IvllFld3Hnv
      XX7VKdF26EUK3as3zVlaw9bpCX79i5+Bo5A9R0+wrbqAdglS4XmuDE6wo1kc/MLaiGS4dSCS
      4daHSIYThAwTASDkNBEAQk4TASDkNBEAQk4zZdjC0DU0TX+4DJKsWJAl0FIpDECSZBRFXnXE
      wjB0NE17uOSSJCsosoSup78nyQqyJJHFgx1CFjElAEITN/jg45vEATU4Sf6RH/N6a5D//d8/
      xl7qwlG6mVPHn8G3SmW4mH+cM598wlwENDWM5Gvn20dK6Tp7kVBSIq+6lRePtOGyinVVhccz
      dR7A0KPcvHCFkr2HKA1d5vRcEy/tKlzrxiz0dzDi2E1V6CITRQfZU2lhsLMLy479bClIV4YT
      8wBpYh5gdabeA4Tnplh0lVDulIkF/IwPX+OTsx0MTy+iPSYs9dgMvVMuWus9uAryGLtyhjPn
      OhmfGWF8XsvMDggbnomnLJ3ZiQlKKvchSRLO+oM871pEUyP0X+/GffAo5QV2Fu6c4w8dg2w5
      8hrPbisG0mf16dEp8mqrcAGO2l0ct8+wnNAIqouoYk1tYY1MCwAjPMp4tJRnKtxIpPDPL+Kr
      qCVPiTE9MU0imQK+XBkuvXGC6bkwdftK0691DXdRFXnqPAM37OwsEIWxhLUxKQA0ZoYXqNy+
      HacEION2apz+/S8JJGQadh97ZGU4AC1wj0RRC0XO9I1uMuHn47dPM6c7adl3jFJRGU5YI5EM
      tw7ETfD6yLmbYEEwmwgAIaeJABBymggAIadl712b8HQILsLv31vTrzqecFNWY0oA6JpKMpl6
      mAynWO1YFYmUmkTTwWKzocgSq41XGLpGMplEX9lYVqzYrBYkCfSUiqpLD18LG4sZ/zJzlkia
      us1fzt4iASQD43gP/ROvbY7wpz9fIKxLlG/dz7G9W3Gsks8WC05x/txZ5iOgqcsYebv43msH
      ccsJej/8dzqiNfzgO8+JynDCmpgSAAU1u/jem7swtAjXO65R3uJjoqebuuf/mp0FKp0XrxAK
      b1q1MpyrqIZT330TDJ35OxcYde/AJessjvUx52ig0Stua4S1MzcZbn6aZVcxZc4UgXg+9eUu
      LHYXPq+bZCzxldvq0WluzXhoqXOjJZa5MxZjR3MtNnHpI3wNJgaAxsz4OKVVNUiShEIKdaUy
      nA4ocrppX6wMB+nZ3anRKQpqK3GhMz/Uw6JSQDwcYnFxkeBy3JxdEjYc85LhlkeZiFVwsNyN
      hE55YYzbgwvkV2nMLixS0WQHvlwZLr1xgpn5CHX7SgCNeMpGKjjCzZkwE7NBCusXqS40Y0xB
      2GjMS4YbCVLd1oJjJRmutO0gAx+8y1uXJXYfO0XRIyrDAWiBEZIlrSvJcAr1u49SvxtS4QVu
      DE/TurUsUzsibHAiGW4diGS4r/A15gHMkL3/MeHpYLVA5dp6ZE3XH977ZYoIAOHJ8rjhpefW
      9KtJkQ4tCJkleoCnla7DZ2/vND39lc3zJLoOWmYLGogAeFrd6INrtx6+3AiDwmbUMjApAAwM
      LUUslkBHxuFyokg6sXAUDZAUK06HHUVe/XRlGBrxWAxNl7A5nFgVSMZjqBpY7Q5sFkUkwwlr
      Yk5pxFSc/qsd3Ly3gKR4OfTKy5RLg/zbTzvxVnqwFW/ixKG95DtXq+6m4R/s5vS1USSLjW37
      n2ezfYaPzl8jrsvYihs5eWQnbpuoDCc8nikBEA3NcG8uxYGjz+GxW/E6JPQpPwXtx3i2tRCX
      Jw/XqosEgx5d4NIdP3uOPEuBw4rL6yI8NEPpjqM05EuM37zJ6HKcliJ3hvdK2IjMCYBkADUU
      pffKRbRknLLdp9jp9GEN9dFxXgdPOccP76PAZWFx9AYXbk1Q3XaEnbX5JJeWUa1J7l67TFxN
      kV/dyoEdu3H2dHJpUENensUd0mgpMmPPhI3GlABwWIspabSwZ38bcriPDzsnSR2p5aVXm7ES
      49KFi4SW4xS4PDiL62hvL8WZl671aXM7cXtrOHywHWsySGfXVWJ6I60HT7Jdj9BzuoviIvEw
      gLA2pgSAO78ID4O89/bv0VMGjYdPEpns50z/OGpKw1K4iZb89JiAzV1Ahbvg4bayp5Rm3yjv
      //EPGEDZ5nbsqWnOfNBNMJXCUbaNXR67GbslbEAm5QIZaGqCcCSOIVvxel3IRorwcoSUAQ6X
      B8dXPNZo6CnCy8toKLg8XixSiuhyhBQyTpcbm1V5ONyds7lA1259bhhUWJ1J/zEJxeogv+Az
      o9OSFW9+waM3+ezWsgVvvu8z37HiWeO2gvBZWXTKEtbVjmZobXr4Mp5YyQbN4qngeDyOw5HZ
      KTsRAE8rRUl/PaBrYLWSzTOEhpYCW2YHMEQynJDTRA9ghp4b6QdFMsiqaZ/vEbKQzYQ2igAw
      w5wfZuYy+pHZfeinmdFGc3KBDI3FyTuc/qSHZcnHqde/TbklTOcHf2YoKLHr6Ivs2FSIsurl
      qkFycZKPPvyE6ZiFPce/xc5aLxg649dP0zVfyF+d2ItDhLawBqYcJurSLJ3Xxzny2huU2FKo
      Cszf6CDe+AJ/V61xvrOHQMkJSjyrNE9doutsD/XH/4YXfRaSmgEYJIP36BtVcfiSj11gTxAe
      MOUmOBwN4XKXoIf9LCwlUOQk034n25tKcHgLKSvJQ42uXhhLXVpg2VuBTwsx7w+BbEFPxegb
      mKFxRxPejdDXC1nDlB5AM2IsTk1yIzZLKh6hsO0IDqzYFJAMCRmJlK4DELp/jbM3xqjZ+Szt
      mwrQVAMtOs3Nq37iqoqrfCttFRpxdzVbi+yMT5mxR8JGZVoyXHGDwp59O5AjfXzYGWCLK8To
      XJy8/CShcIQSRzqfx122mUOHqrF70unNNo8Lt6eKgwf3YFODdF68SN/1RW5PRejtSDAXCrNk
      q+I7++vM2DVhgzEpGa6YPAZ553e/Rddlmo69TIPTyR/f+x13JInSxj0UeNOFca1OLyVO78Nt
      ZXcJLcWjvPeH36IjU7ltP/tP1HJcAnVxmgu9I+zfLQ5+YW1MS4bTUyqxeBJDsuBy2ZGAZDyK
      qoHd6cKiPHrS3tA1YtEoOgp2lxPryqOThq6jahpWi/XhhGdWJsO9+3HGh0GF1ZmWDCdbbLg9
      ny9/bne6WUsisySns0C//H0ZW4YLKwkbmxgtN8Op40BmO950aURHNqcCEYvHcYpkuBygmNBL
      KUr6c7M5AmQ546kQ4npByGmiB1hvHd2wHDa7FV9i1fX0GTaL2UxoowiA9Tbvh0DI7FZ8yUaY
      IM+ZZDjUZS5+/AG3xkIgwYFv/4gW3yS/+V/vEXYoOMq28Mrzhyl0rdY8g/FLf+bPvTNYZAub
      95zkQKOdnrOnGfbr1O88xKHtdVhXz6QThM8xZ53gRJSYt443fvDXuFZWtUvNzpJ/4Lv83b7S
      x2wdY2bOzes//jEPfnP25kdIW07x5kkrV89dZjpSRm2eGZUmhY3GlItCNamjxxeZnp5kemER
      3TBIhgLEtSjjE1MsRhIPF8L+Ei1OAIPo+DhTMwskNANZkVmcn2RyJoDDCDEeTGV0f4SNy5Qe
      QHa4KLTr3O2/RWJ5mfoj32ZzwSZc9we4FUyRkAs4dmQ/hW4rwXs9fHxtlLrdJ9jb4APDTn2l
      g4HbfaTUGPm1e9nXvJ/66z0MDsxihMLYRT60sEbm3ANYLDRsP8pOr43w/QucHQ1Q31TKsRNb
      sEvpynBL4QSFbiveqmZO+BqxudIzv7quULKljc3tHuLBSbqu3CPRcpAt7Udp0pa4dDpFhagM
      J6yRKQGQigW4drabqeUYKE4OnDpAZO42HdcGiaV0PJXbaF2pDGexu/HZPy10q6dijFzvYmAi
      iCbZaN77HEpsmtPvXcCfAt+mXewVleGENTIlGc4wDLRUEjWlIytWbFYF0EkmVHTAYrVhkeXV
      Jy0NA01LoaopkBVsNisSOslEEgMZi9WKosjmVYb7w/tZOQwqrM6UHkCSJCxWO5bPXako2B1r
      GAmWJBSLFeVzGyvYHWLUR/j6xETYevvOKbNbsKp4IrFSGS57iWS4p0E2J5uBaN8XZHdyiCA8
      YaIHeFKCi9DZY3YrHjIj0ezrEslwTxNVhdl5s1vxUHYf+mk5lAy3RNfp97k9sfRpMlz+Iufe
      f4+RRYm2Qy+wu7EUy6r/NZ2xrnd49/bcw2S4IzursBga97vfp8NfzOsnD+AUoS2sgUnJcDHi
      BfW88cJeXFYJ0JnuvgTNL/FGpcb5zusEKk5QulplOOLMLnh5/cd/xadpcwYJ/zD9MzJ5+dqj
      84gE4QtMS4bTIgEmxkaZmA2iGUlmgy5athRh9/goLc5HjcZX3zgVw29oLI2MMDY5SzxloKtR
      bg/O07SjCc9GSHwXsoY5yXBON6UeK+P37xILBfEfegENBasMkpGOSn3lNB64e5m/XBlh094X
      OdDoA8nJ5lovo/eGUeMRRivbaSkOkvTWUu6zcH/CjD0SNipzrpRlmZptz7A9z55OhhuL0uZc
      ZHgqiteXJLAUpmRzOp8nv3YHr5Q1Y7Wnl0nVNAnfpmYadnpXkuH6GZwLcGN0kd4LojKc8PWY
      kwyXCHHj7EXGQlFkm4fDLx+mSmrl6p9+wy1Nom77YXwrNYMUmwOv7TOzg6k4ozc7eff+Arri
      oO2ZF9jZWMRBRGU44eszLRnO0DU03UCSZZSVsV9dT9/AKoqCJD2iMpxhoBs6mqYjSXI68W1l
      9tAwDAzDQJJk8yvDzS3AO6ef2GcK68O0ZDhJsSB/4YZVUSyPHwuWJGRJQf7ixg/eN5um+rNo
      4unBWS6L/jpfYpD59onR8ieltBh++Ldmt+KhRDy9TGo25wLFYzGczsxm9WbPKUoQTCACQMhp
      4hJoHVgmZ5F672T15UU60Uwim+8C7CIZbmOSEwlYCJjdjK+0Ebp6M9poYgAYTPWd4XdXU/yn
      7z+PlBrjrf/5HnG39TGV4QDDYGnqDu990MPev/0HavQZOs58zGjQoGb7AY7uasBmRgVmYcMx
      LQCM+CwDI0s4PUXp16E5ig7/DS/vLXn8tobK4NAEBW6ZhA7BkdvYW1/lzVoLN85fZipSxSZR
      GU5YA1NOk4YWZ+DaIJW7d1PsTDchEfATjgYYunuPhaX4ozM6DY3QvWvESndRV5xOj1BsFhbG
      7jI8MomRmGfcLyrDCWtjzjrB/gkCtnIafK6H31OKmyg1ZpgYG+ZC52WCERUA/1AXv/rVr+ga
      Sl9jq0uz9M5Y2dtc+nAled/mfTT7VOZm5wnHVYwMr74ibFymXAIFxgbovTpF35Ukk7PLoLg4
      sKuKvQeP4JTjXLpwkeVIgiKPFV/9Hl6v3oViTSfHhQKTjPddY7D/KsuzE9hChZSdPEBd637q
      tRCdfwlTV2R7TAsEIc2kVSJXJBZ4+8wgr76wj9D9W3zceZ3lpEFxYzsnDrbhtX91YsTQx79D
      3fs6DYzy4R8+Zl6Tqdz2DM/v34pN+TQ/6EnnAtF/N6ue/xXWztwAML7qYkV67LB6uukSX1pw
      7jOJdCIAhK9i7jzAozI+17z5g63NndwxZBmsliyeYoIH54psb2Om5xLFRNg6UDdVIzfUrn2h
      bBOIZLjVidkiIaeJABByWvb22dmmbxAG7636I6sZF69fk20DtNFuQhtNDYClubtcHory3ME2
      ZFQGus9zNwDb9x+mrsjxlTds6tIMPdeHadx/mNKVR4aDoze45XdzYOdmbOtdHiUae2Td/+w+
      rNI2QldvRhtN+7sYqQiD17u5NerHMAyW7l5kKFnBjqZy7vRcJBTXH72toXG3v5+pu3dYSAIY
      aLFZrvcMMBmYQX30poLwOSb1ABrzAzdJlu9kkxECVMZGEuw80UKNkmTev0g8nIBHLHqhh4YZ
      jxezuXolBVlXudc3RH5TG4SCmdsNYcMzpQdIhGYYCjvZ1ViycvmQIiG58FrTY/t2JBJqOhco
      Fpyir6+PqWAMAC0R5MoNP+3PtPAgWzrin2RB97GlqsCM3RE2MFN6gLHbHVy8vMDQbYXxmSUU
      q4syY4lgAgosOjE9RaEtvQSSlogQDAaxFtYC4L/fy6Wr17kzOsjS9CjW5QK2xge4Om+j/3qS
      2WCYiKOab+2tNWPXhA3GlFQIXUuh6QYk/bxzbohXnj+I4e/lncsBqoolQkkvR4/sxWP98u2l
      oWtomo4B3D3zNqm936XFa6AbBqnlWTp6R9h/4DB5jnTntm6pED034Oadb/YeQtYxpzbog5pA
      so8D7S1YrQpSeRuHtg8wF5HY2rgV9yoHP4AkK1hWagLV7DyI7lFQLOna8oq3mB2tTly2jTDm
      IWQDc+cBFDuVZQ/W9LVQ2dhK5dfY3FNa9bnXstVBaXFmF1kTNrZVA2BiYoJkMpnptmQ3iwXs
      qy/A/SCn9Zul9j1ZxkrdtextYbqNmW6huenQGZCJdGhVVZFlGUXJ3sUJEokENpstu0pHfkFi
      ZSnXTBIXy0JOEwEg5DSRDLcOsvk5gAdstux/TtpqtWb8M7P/P7cBZPN19QMboY2yCeXkxSWQ
      kNNEAAg5TVwCrZnGyNWzdN68T1Lx0Lz/KPvrPdzqOsOloTm85U28cuoI+tw1xhJb2V5jcOPC
      JfJ3H6GhIDNDe4ahMXv3Kucu3iasuTn48ss05cc58/5fGF6IUt1ymOP7m5i624OjeAdlrhCX
      OvrZfPQoZY5MngsNBjt/y9uDPv7LD18gHrjH+++fYyFpoXnfcxzY7OFq3wQ7WrehxMc4f3mB
      vc/uJe8R2QHfhAiANQsxMipx6vs/wBu+z+lbsyw7AkxbavjBD08xefU0N8fCtNo1dN3APznE
      oruGtrzM3XzqySj9Q9McePXvqMlTSEkyC709yE3H+dG3Crh67iPGA3VIuoahp7jXP4CzvjnD
      Bz/okVFG/A5KC72AxuStPqqO/Q0veZc42zNEpGY7mqZhqMtc7Rmmfs+xJ3LwgwiAr8FHbZXK
      je5u7KkoxeVbCSeCVFeWY7PYKN3WyOTNBbSqBCN9nUxILo68vAtFztzNp6rNEQ07Wbh/iwWL
      l8YtNSxEnGzZ4sNicVBaW0EsFEaKhLg1dgHZUcnRXY8vRrye9OQSVy/ep+3YHiJdE0CcYLyQ
      zVUe7FgocjpIJlTU0DQXzk3irmllU8GTGx0S9wBrZaRIaTZcLjsOu0I0mkh/e2Ui3XjwPKsk
      YbVZQUuSTBlfqtn1ZGmoKQPFYoWlES5cH8MgnSm70sj085uyjNWmoCUTaFom2wcLk/eIF1Th
      05OkUipJVePTZJKVhA0pnfRos0ok4+oT/ROKAFirxDRDCw62b9/JzpY6Zqem8ToUJianSaYS
      zPbdRa4sRrHYqN68j0O7i7je04f6yDLX68+ilFNSbqNqcws7djQgBWMUeBMM3Q+gqlFmRqex
      FHhRnHk0bT/EttIYNwYmMxqj4YVp7t+5xH/88UMGers5f2UGtyvI0NgS8cUA/mgcq82KJa+U
      /QcPURAe5vZM9Im1UVwCrZW9gpaKYd5+6+eosofN7YfwVvioHT/Hv/7iOoW1bbxY40abt2G1
      SPiqm6if7eTOzCZ2Vnky0kTF6mZTtYuzv/83woaXPcdPUFGic+8vf+EXlyI07H6OXYV2poM2
      FEWhsmUnoYvdjATLafBl5lBo2PcyDfuA+CzvXZzm+We2kgg5OP3B73krYaPt4PN4HBZsViuS
      1cOOZ3bT0XmFhfzDlLjWP9dKJMMJOU1cAgk5TQSAkNNEAAg5TQSAkNNEAAg5TQSAkNNEAAg5
      TQSAkNPETLDweHqK+7e66B1Nl4cv23aA/VtKv9FbDt26jG9TO8Uecw9B0QMIj6erdJ/5iImE
      lZKSEvJd3zzF+8L7bzEaML/2lOgBhLWxetnStptnmsoAMOJ+Os6cZ3JZpv34SbZ4Anz80R3i
      0hI4yyi2xhmdjbHzyHHqHUHOXuhmIaqzde8JdjUUPnzb6MJ9Orp6WJJKOPTsM1R4RV0gIRtF
      xnjrf/xX/uVf/oU/XrlP9zt/4FZAx8sU/+/n7zK/OMyf372Jp7KG3nNvMxp34V68yTsXB1Gj
      MXSbi3xHiHd+/jZT8fRbGlqCT975DRMRC8nxLn754Y2M75boAYS1cdfy/f/8Ji80lUHczy/e
      HWTSXoHusdGwpQRFB4+vlubW7fRf+IDGLc2UOAfpnQozM3yXK9cmyfdGCfptJFLpt9S0GH3X
      u4lXOyly5VFdlJms2c8SASB8fTYnmxvKWVCbePbAJnRNxsLsI345xdz9CbyN+3i2McD0wN2H
      P5EVJ/X1WwjUtXGsyUdUystM+z9D+clPfvKTjH9qhoVCIXw+n9nN2MAkLFY7pZVVFDhtIFmp
      bKgnNXeX/nsT2Hw11FYX43QXUldXhNPqoLKqFo/LjsdXzc62eubvDxG2ldDauJm6hio8dhsV
      tVtobqpncWyAu+NB8qvrqclwLyCeBxBymrgJFnKaCAAhp4kAEHLa/wcLqOJ8u752ogAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SG_Population Pyramid' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total_Population_2022' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trellis_Population Pyramid_Top_9_Area_SG_2022' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
