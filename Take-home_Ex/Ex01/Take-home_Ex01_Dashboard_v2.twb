<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top Planning Areas' datatype='integer' default-format='N' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='9'>
        <calculation class='tableau' formula='9' />
        <range granularity='1' max='20' min='1' />
      </column>
    </datasource>
    <datasource caption='2022M&amp;F (SG_Residents_Jun2022_Merged)' inline='true' name='federated.0ewukna0yphxib12ymrcj107z9nr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SG_Residents_Jun2022_Merged' name='excel-direct.1u8o29g0dn23qa1392cmj0b11ppt'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='G:/My Drive/SMU MITB/ISSS608 Visual Analytics and Applications/lzy66666666/Visual-Analytics-Applications/Take-home_Ex/Ex01/Data/SG_Residents_Jun2022_Merged.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1u8o29g0dn23qa1392cmj0b11ppt' name='2022M&amp;F' table='[&apos;2022M&amp;F$&apos;]' type='table'>
          <columns gridOrigin='A1:F10001:no:A1:F2147483647:0' header='yes' outcome='2'>
            <column datatype='string' name='Planning Area' ordinal='0' />
            <column datatype='string' name='Subzone' ordinal='1' />
            <column datatype='string' name='Age Group' ordinal='2' />
            <column datatype='string' name='Type of Dwelling' ordinal='3' />
            <column datatype='integer' name='2022' ordinal='4' />
            <column datatype='string' name='Gender' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1u8o29g0dn23qa1392cmj0b11ppt' name='2022M&amp;F' table='[&apos;2022M&amp;F$&apos;]' type='table'>
          <columns gridOrigin='A1:F10001:no:A1:F2147483647:0' header='yes' outcome='2'>
            <column datatype='string' name='Planning Area' ordinal='0' />
            <column datatype='string' name='Subzone' ordinal='1' />
            <column datatype='string' name='Age Group' ordinal='2' />
            <column datatype='string' name='Type of Dwelling' ordinal='3' />
            <column datatype='integer' name='2022' ordinal='4' />
            <column datatype='string' name='Gender' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2022M&amp;F]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F10001:no:A1:F2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Planning Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Planning Area]</local-name>
            <parent-name>[2022M&amp;F]</parent-name>
            <remote-alias>Planning Area</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022M&amp;F_86302E625F3D4323BBAC309560376B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Subzone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Subzone]</local-name>
            <parent-name>[2022M&amp;F]</parent-name>
            <remote-alias>Subzone</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022M&amp;F_86302E625F3D4323BBAC309560376B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Age Group]</local-name>
            <parent-name>[2022M&amp;F]</parent-name>
            <remote-alias>Age Group</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022M&amp;F_86302E625F3D4323BBAC309560376B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of Dwelling</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type of Dwelling]</local-name>
            <parent-name>[2022M&amp;F]</parent-name>
            <remote-alias>Type of Dwelling</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022M&amp;F_86302E625F3D4323BBAC309560376B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2022</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2022]</local-name>
            <parent-name>[2022M&amp;F]</parent-name>
            <remote-alias>2022</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022M&amp;F_86302E625F3D4323BBAC309560376B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[2022M&amp;F]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022M&amp;F_86302E625F3D4323BBAC309560376B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[2022]' role='measure' type='quantitative' />
      <column caption='Labels' datatype='string' name='[Calculation_1131247984952020992]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Top N Planning Area]&#13;&#10;then &quot;Top &quot; + str([Parameters].[Parameter 1]) + &quot; Planning Areas&quot;&#13;&#10;else &quot;Others&quot;&#13;&#10;END' />
      </column>
      <column caption='Female' datatype='integer' name='[Calculation_609674852744388608]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Gender]=&quot;FEMALE&quot;&#13;&#10;THEN[2022]&#13;&#10;END' />
      </column>
      <column caption='Male' datatype='integer' name='[Calculation_609674852744601601]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Gender]=&quot;MALE&quot;&#13;&#10;then [2022]&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Planning Area]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='2022M&amp;F' datatype='table' name='[__tableau_internal_object_id__].[2022M&amp;F_86302E625F3D4323BBAC309560376B5E]' role='measure' type='quantitative' />
      <group caption='Top N Planning Area' name='[Top N Planning Area]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([2022])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Planning Area]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Planning Area' />
        <field-sort-custom-order field='Subzone' />
        <field-sort-custom-order field='Age Group' />
        <field-sort-custom-order field='Type of Dwelling' />
        <field-sort-custom-order field='2022' />
        <field-sort-custom-order field='Calculation_609674852744601601' />
        <field-sort-custom-order field='Calculation_609674852744388608' />
        <field-sort-custom-order field='Gender' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top Planning Areas' datatype='integer' default-format='N' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='9'>
          <calculation class='tableau' formula='9' />
          <range granularity='1' max='20' min='1' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='2022M&amp;F' id='2022M&amp;F_86302E625F3D4323BBAC309560376B5E'>
            <properties context=''>
              <relation connection='excel-direct.1u8o29g0dn23qa1392cmj0b11ppt' name='2022M&amp;F' table='[&apos;2022M&amp;F$&apos;]' type='table'>
                <columns gridOrigin='A1:F10001:no:A1:F2147483647:0' header='yes' outcome='2'>
                  <column datatype='string' name='Planning Area' ordinal='0' />
                  <column datatype='string' name='Subzone' ordinal='1' />
                  <column datatype='string' name='Age Group' ordinal='2' />
                  <column datatype='string' name='Type of Dwelling' ordinal='3' />
                  <column datatype='integer' name='2022' ordinal='4' />
                  <column datatype='string' name='Gender' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Population Pyramid_SG_2022'>
      <table>
        <view>
          <datasources>
            <datasource caption='2022M&amp;F (SG_Residents_Jun2022_Merged)' name='federated.0ewukna0yphxib12ymrcj107z9nr' />
          </datasources>
          <datasource-dependencies datasource='federated.0ewukna0yphxib12ymrcj107z9nr'>
            <column datatype='integer' name='[2022]' role='measure' type='quantitative' />
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column caption='Female' datatype='integer' name='[Calculation_609674852744388608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Gender]=&quot;FEMALE&quot;&#13;&#10;THEN[2022]&#13;&#10;END' />
            </column>
            <column caption='Male' datatype='integer' name='[Calculation_609674852744601601]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Gender]=&quot;MALE&quot;&#13;&#10;then [2022]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subzone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type of Dwelling]' role='dimension' type='nominal' />
            <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subzone]' derivation='None' name='[none:Subzone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Dwelling]' derivation='None' name='[none:Type of Dwelling:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_609674852744388608]' derivation='Sum' name='[sum:Calculation_609674852744388608:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_609674852744601601]' derivation='Sum' name='[sum:Calculation_609674852744601601:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Age Group:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Age Group:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Age Group:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;90 &amp; Over&quot;</bucket>
              <bucket>&quot;85 - 89&quot;</bucket>
              <bucket>&quot;80 - 84&quot;</bucket>
              <bucket>&quot;75 - 79&quot;</bucket>
              <bucket>&quot;70 - 74&quot;</bucket>
              <bucket>&quot;65 - 69&quot;</bucket>
              <bucket>&quot;60 - 64&quot;</bucket>
              <bucket>&quot;55 - 59&quot;</bucket>
              <bucket>&quot;50 - 54&quot;</bucket>
              <bucket>&quot;45 - 49&quot;</bucket>
              <bucket>&quot;40 - 44&quot;</bucket>
              <bucket>&quot;35 - 39&quot;</bucket>
              <bucket>&quot;30 - 34&quot;</bucket>
              <bucket>&quot;25 - 29&quot;</bucket>
              <bucket>&quot;20 - 24&quot;</bucket>
              <bucket>&quot;15 - 19&quot;</bucket>
              <bucket>&quot;10 - 14&quot;</bucket>
              <bucket>&quot;5 - 9&quot;</bucket>
              <bucket>&quot;0 - 4&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Subzone:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Subzone:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Subzone:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]'>
            <groupfilter function='member' level='[none:Type of Dwelling:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff9da7' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff9da7' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744601601:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</rows>
        <cols>([federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk] + [federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744601601:qk])</cols>
      </table>
      <simple-id uuid='{F8B8EE15-3E2E-4ACF-87EE-6CF8448C4AB5}' />
    </worksheet>
    <worksheet name='Population Pyramid_Top_9_Area_SG_2022'>
      <table>
        <view>
          <datasources>
            <datasource caption='2022M&amp;F (SG_Residents_Jun2022_Merged)' name='federated.0ewukna0yphxib12ymrcj107z9nr' />
          </datasources>
          <datasource-dependencies datasource='federated.0ewukna0yphxib12ymrcj107z9nr'>
            <column datatype='integer' name='[2022]' role='measure' type='quantitative' />
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column caption='Female' datatype='integer' name='[Calculation_609674852744388608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Gender]=&quot;FEMALE&quot;&#13;&#10;THEN[2022]&#13;&#10;END' />
            </column>
            <column caption='Male' datatype='integer' name='[Calculation_609674852744601601]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Gender]=&quot;MALE&quot;&#13;&#10;then [2022]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Planning Area]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subzone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type of Dwelling]' role='dimension' type='nominal' />
            <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Planning Area]' derivation='None' name='[none:Planning Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subzone]' derivation='None' name='[none:Subzone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Dwelling]' derivation='None' name='[none:Type of Dwelling:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_609674852744388608]' derivation='Sum' name='[sum:Calculation_609674852744388608:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_609674852744601601]' derivation='Sum' name='[sum:Calculation_609674852744601601:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Age Group:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Age Group:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Age Group:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;90 &amp; Over&quot;</bucket>
              <bucket>&quot;85 - 89&quot;</bucket>
              <bucket>&quot;80 - 84&quot;</bucket>
              <bucket>&quot;75 - 79&quot;</bucket>
              <bucket>&quot;70 - 74&quot;</bucket>
              <bucket>&quot;65 - 69&quot;</bucket>
              <bucket>&quot;60 - 64&quot;</bucket>
              <bucket>&quot;55 - 59&quot;</bucket>
              <bucket>&quot;50 - 54&quot;</bucket>
              <bucket>&quot;45 - 49&quot;</bucket>
              <bucket>&quot;40 - 44&quot;</bucket>
              <bucket>&quot;35 - 39&quot;</bucket>
              <bucket>&quot;30 - 34&quot;</bucket>
              <bucket>&quot;25 - 29&quot;</bucket>
              <bucket>&quot;20 - 24&quot;</bucket>
              <bucket>&quot;15 - 19&quot;</bucket>
              <bucket>&quot;10 - 14&quot;</bucket>
              <bucket>&quot;5 - 9&quot;</bucket>
              <bucket>&quot;0 - 4&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Bedok&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Choa Chu Kang&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Hougang&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Jurong West&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Punggol&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Sengkang&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Tampines&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Woodlands&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Yishun&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Subzone:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Subzone:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Subzone:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]'>
            <groupfilter function='member' level='[none:Type of Dwelling:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff9da7' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff9da7' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744601601:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</rows>
        <cols>([federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk] + [federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744601601:qk])</cols>
      </table>
      <simple-id uuid='{7DAF7851-00AD-4AD2-93DD-AC0BEFB8DFF0}' />
    </worksheet>
    <worksheet name='Population_by_Areas_2022'>
      <table>
        <view>
          <datasources>
            <datasource caption='2022M&amp;F (SG_Residents_Jun2022_Merged)' name='federated.0ewukna0yphxib12ymrcj107z9nr' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top Planning Areas' datatype='integer' default-format='N' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='9'>
              <calculation class='tableau' formula='9' />
              <range granularity='1' max='20' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ewukna0yphxib12ymrcj107z9nr'>
            <column datatype='integer' name='[2022]' role='measure' type='quantitative' />
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column caption='Labels' datatype='string' name='[Calculation_1131247984952020992]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Top N Planning Area]&#13;&#10;then &quot;Top &quot; + str([Parameters].[Parameter 1]) + &quot; Planning Areas&quot;&#13;&#10;else &quot;Others&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Planning Area]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subzone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type of Dwelling]' role='dimension' type='nominal' />
            <column-instance column='[Top N Planning Area]' derivation='InOut' name='[io:Top N Planning Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1131247984952020992]' derivation='None' name='[none:Calculation_1131247984952020992:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Planning Area]' derivation='None' name='[none:Planning Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subzone]' derivation='None' name='[none:Subzone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Dwelling]' derivation='None' name='[none:Type of Dwelling:nk]' pivot='key' type='nominal' />
            <column-instance column='[2022]' derivation='Sum' name='[sum:2022:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]'>
            <groupfilter function='member' level='[none:Age Group:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Gender:nk]'>
            <groupfilter function='member' level='[none:Gender:nk]' member='&quot;TOTAL&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Planning Area:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Planning Area&quot;' />
                <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Planning Area:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]' direction='DESC' using='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:2022:qk]' />
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]'>
            <groupfilter function='member' level='[none:Subzone:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]'>
            <groupfilter function='member' level='[none:Type of Dwelling:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Gender:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:2022:qk]' scope='cols' value='2022 Population' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0ewukna0yphxib12ymrcj107z9nr].[io:Top N Planning Area:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ewukna0yphxib12ymrcj107z9nr].[io:Top N Planning Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ewukna0yphxib12ymrcj107z9nr].[io:Top N Planning Area:nk] / ([federated.0ewukna0yphxib12ymrcj107z9nr].[none:Calculation_1131247984952020992:nk] / [federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]))</rows>
        <cols>[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:2022:qk]</cols>
      </table>
      <simple-id uuid='{4ADECA7A-5ED5-4E7B-9219-169EA754B1BC}' />
    </worksheet>
    <worksheet name='Trellis_Population Pyramid_Top_9_Area_SG_2022'>
      <table>
        <view>
          <datasources>
            <datasource caption='2022M&amp;F (SG_Residents_Jun2022_Merged)' name='federated.0ewukna0yphxib12ymrcj107z9nr' />
          </datasources>
          <datasource-dependencies datasource='federated.0ewukna0yphxib12ymrcj107z9nr'>
            <column datatype='integer' name='[2022]' role='measure' type='quantitative' />
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column caption='Female' datatype='integer' name='[Calculation_609674852744388608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Gender]=&quot;FEMALE&quot;&#13;&#10;THEN[2022]&#13;&#10;END' />
            </column>
            <column caption='Male' datatype='integer' name='[Calculation_609674852744601601]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Gender]=&quot;MALE&quot;&#13;&#10;then [2022]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Planning Area]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subzone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type of Dwelling]' role='dimension' type='nominal' />
            <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Planning Area]' derivation='None' name='[none:Planning Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subzone]' derivation='None' name='[none:Subzone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Dwelling]' derivation='None' name='[none:Type of Dwelling:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_609674852744388608]' derivation='Sum' name='[sum:Calculation_609674852744388608:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_609674852744601601]' derivation='Sum' name='[sum:Calculation_609674852744601601:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Age Group:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Age Group:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Age Group:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;90 &amp; Over&quot;</bucket>
              <bucket>&quot;85 - 89&quot;</bucket>
              <bucket>&quot;80 - 84&quot;</bucket>
              <bucket>&quot;75 - 79&quot;</bucket>
              <bucket>&quot;70 - 74&quot;</bucket>
              <bucket>&quot;65 - 69&quot;</bucket>
              <bucket>&quot;60 - 64&quot;</bucket>
              <bucket>&quot;55 - 59&quot;</bucket>
              <bucket>&quot;50 - 54&quot;</bucket>
              <bucket>&quot;45 - 49&quot;</bucket>
              <bucket>&quot;40 - 44&quot;</bucket>
              <bucket>&quot;35 - 39&quot;</bucket>
              <bucket>&quot;30 - 34&quot;</bucket>
              <bucket>&quot;25 - 29&quot;</bucket>
              <bucket>&quot;20 - 24&quot;</bucket>
              <bucket>&quot;15 - 19&quot;</bucket>
              <bucket>&quot;10 - 14&quot;</bucket>
              <bucket>&quot;5 - 9&quot;</bucket>
              <bucket>&quot;0 - 4&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Bedok&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Choa Chu Kang&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Hougang&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Jurong West&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Punggol&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Sengkang&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Tampines&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Woodlands&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Yishun&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Subzone:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Subzone:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Subzone:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]'>
            <groupfilter function='member' level='[none:Type of Dwelling:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff9da7' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff9da7' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744601601:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</rows>
        <cols>([federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk] * ([federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk] + [federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744601601:qk]))</cols>
      </table>
      <simple-id uuid='{0B5033C4-C90F-4588-A801-1E102D008DBC}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='SG_Population Pyramid'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='31' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='29' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='49000' id='3' name='Population Pyramid_SG_2022' w='49200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='5' name='Trellis_Population Pyramid_Top_9_Area_SG_2022' w='98400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='28' name='Population_by_Areas_2022' w='49200' x='50000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='33' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='32' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Population Pyramid_SG_2022' w='49200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='28' is-fixed='true' name='Population_by_Areas_2022' w='49200' x='50000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='Trellis_Population Pyramid_Top_9_Area_SG_2022' w='98400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6C9422BB-DB1B-4F24-837E-BAFB253CF1F0}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Population Pyramid_SG_2022'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2BED518B-E640-43F9-A7BD-924E7E0A7F28}' />
    </window>
    <window class='worksheet' name='Population_by_Areas_2022'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0ewukna0yphxib12ymrcj107z9nr].[io:Top N Planning Area:nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[io:Top N Planning Area:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Calculation_1131247984952020992:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Gender:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F33F9666-F926-4B7B-9E12-FF2825A93581}' />
    </window>
    <window class='worksheet' name='Population Pyramid_Top_9_Area_SG_2022'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='300'>
            <card param='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A89DDAF9-3AAB-40BA-BC9A-9C4FE85809BD}' />
    </window>
    <window class='worksheet' name='Trellis_Population Pyramid_Top_9_Area_SG_2022'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A27762D9-7BB0-406D-9F9F-05248CBE1070}' />
    </window>
    <window class='dashboard' maximized='true' name='SG_Population Pyramid'>
      <viewpoints>
        <viewpoint name='Population Pyramid_SG_2022'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Population_by_Areas_2022'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Trellis_Population Pyramid_Top_9_Area_SG_2022'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D139CF1D-EA60-43DE-B019-7CD4AAAE9BC9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Population Pyramid_SG_2022' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Population Pyramid_Top_9_Area_SG_2022' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Population_by_Areas_2022' width='192'>
      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
      YgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SG_Population Pyramid' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trellis_Population Pyramid_Top_9_Area_SG_2022' width='192'>
      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
      2wZ15QAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
