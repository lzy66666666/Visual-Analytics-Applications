<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top Planning Areas' datatype='integer' default-format='N' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='9'>
        <calculation class='tableau' formula='9' />
        <range granularity='1' max='20' min='1' />
      </column>
    </datasource>
    <datasource caption='2022M&amp;F (SG_Residents_Jun2022_Merged)' inline='true' name='federated.0ewukna0yphxib12ymrcj107z9nr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SG_Residents_Jun2022_Merged' name='excel-direct.1u8o29g0dn23qa1392cmj0b11ppt'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='G:/My Drive/SMU MITB/ISSS608 Visual Analytics and Applications/lzy66666666/Visual-Analytics-Applications/Take-home_Ex/Ex01/Data/SG_Residents_Jun2022_Merged.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1u8o29g0dn23qa1392cmj0b11ppt' name='2022M&amp;F' table='[&apos;2022M&amp;F$&apos;]' type='table'>
          <columns gridOrigin='A1:F10001:no:A1:F2147483647:0' header='yes' outcome='2'>
            <column datatype='string' name='Planning Area' ordinal='0' />
            <column datatype='string' name='Subzone' ordinal='1' />
            <column datatype='string' name='Age Group' ordinal='2' />
            <column datatype='string' name='Type of Dwelling' ordinal='3' />
            <column datatype='integer' name='2022' ordinal='4' />
            <column datatype='string' name='Gender' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1u8o29g0dn23qa1392cmj0b11ppt' name='2022M&amp;F' table='[&apos;2022M&amp;F$&apos;]' type='table'>
          <columns gridOrigin='A1:F10001:no:A1:F2147483647:0' header='yes' outcome='2'>
            <column datatype='string' name='Planning Area' ordinal='0' />
            <column datatype='string' name='Subzone' ordinal='1' />
            <column datatype='string' name='Age Group' ordinal='2' />
            <column datatype='string' name='Type of Dwelling' ordinal='3' />
            <column datatype='integer' name='2022' ordinal='4' />
            <column datatype='string' name='Gender' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2022M&amp;F]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F10001:no:A1:F2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Planning Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Planning Area]</local-name>
            <parent-name>[2022M&amp;F]</parent-name>
            <remote-alias>Planning Area</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022M&amp;F_86302E625F3D4323BBAC309560376B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Subzone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Subzone]</local-name>
            <parent-name>[2022M&amp;F]</parent-name>
            <remote-alias>Subzone</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022M&amp;F_86302E625F3D4323BBAC309560376B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Age Group]</local-name>
            <parent-name>[2022M&amp;F]</parent-name>
            <remote-alias>Age Group</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022M&amp;F_86302E625F3D4323BBAC309560376B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of Dwelling</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type of Dwelling]</local-name>
            <parent-name>[2022M&amp;F]</parent-name>
            <remote-alias>Type of Dwelling</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022M&amp;F_86302E625F3D4323BBAC309560376B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2022</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2022]</local-name>
            <parent-name>[2022M&amp;F]</parent-name>
            <remote-alias>2022</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022M&amp;F_86302E625F3D4323BBAC309560376B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[2022M&amp;F]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022M&amp;F_86302E625F3D4323BBAC309560376B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[2022]' role='measure' type='quantitative' />
      <column caption='Labels' datatype='string' name='[Calculation_1131247984952020992]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Top N Planning Area]&#13;&#10;then &quot;Top &quot; + str([Parameters].[Parameter 1]) + &quot; Planning Areas&quot;&#13;&#10;else &quot;Others&quot;&#13;&#10;END' />
      </column>
      <column caption='Female' datatype='integer' name='[Calculation_609674852744388608]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Gender]=&quot;FEMALE&quot;&#13;&#10;THEN[2022]&#13;&#10;END' />
      </column>
      <column caption='Male' datatype='integer' name='[Calculation_609674852744601601]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Gender]=&quot;MALE&quot;&#13;&#10;then [2022]&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Planning Area]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='2022M&amp;F' datatype='table' name='[__tableau_internal_object_id__].[2022M&amp;F_86302E625F3D4323BBAC309560376B5E]' role='measure' type='quantitative' />
      <group caption='Top N Planning Area' name='[Top N Planning Area]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([2022])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Planning Area]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Planning Area' />
        <field-sort-custom-order field='Subzone' />
        <field-sort-custom-order field='Age Group' />
        <field-sort-custom-order field='Type of Dwelling' />
        <field-sort-custom-order field='2022' />
        <field-sort-custom-order field='Calculation_609674852744601601' />
        <field-sort-custom-order field='Calculation_609674852744388608' />
        <field-sort-custom-order field='Gender' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top Planning Areas' datatype='integer' default-format='N' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='9'>
          <calculation class='tableau' formula='9' />
          <range granularity='1' max='20' min='1' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='2022M&amp;F' id='2022M&amp;F_86302E625F3D4323BBAC309560376B5E'>
            <properties context=''>
              <relation connection='excel-direct.1u8o29g0dn23qa1392cmj0b11ppt' name='2022M&amp;F' table='[&apos;2022M&amp;F$&apos;]' type='table'>
                <columns gridOrigin='A1:F10001:no:A1:F2147483647:0' header='yes' outcome='2'>
                  <column datatype='string' name='Planning Area' ordinal='0' />
                  <column datatype='string' name='Subzone' ordinal='1' />
                  <column datatype='string' name='Age Group' ordinal='2' />
                  <column datatype='string' name='Type of Dwelling' ordinal='3' />
                  <column datatype='integer' name='2022' ordinal='4' />
                  <column datatype='string' name='Gender' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Population Pyramid_SG_2022'>
      <table>
        <view>
          <datasources>
            <datasource caption='2022M&amp;F (SG_Residents_Jun2022_Merged)' name='federated.0ewukna0yphxib12ymrcj107z9nr' />
          </datasources>
          <datasource-dependencies datasource='federated.0ewukna0yphxib12ymrcj107z9nr'>
            <column datatype='integer' name='[2022]' role='measure' type='quantitative' />
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column caption='Female' datatype='integer' name='[Calculation_609674852744388608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Gender]=&quot;FEMALE&quot;&#13;&#10;THEN[2022]&#13;&#10;END' />
            </column>
            <column caption='Male' datatype='integer' name='[Calculation_609674852744601601]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Gender]=&quot;MALE&quot;&#13;&#10;then [2022]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subzone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type of Dwelling]' role='dimension' type='nominal' />
            <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subzone]' derivation='None' name='[none:Subzone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Dwelling]' derivation='None' name='[none:Type of Dwelling:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_609674852744388608]' derivation='Sum' name='[sum:Calculation_609674852744388608:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_609674852744601601]' derivation='Sum' name='[sum:Calculation_609674852744601601:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Age Group:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Age Group:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Age Group:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;90 &amp; Over&quot;</bucket>
              <bucket>&quot;85 - 89&quot;</bucket>
              <bucket>&quot;80 - 84&quot;</bucket>
              <bucket>&quot;75 - 79&quot;</bucket>
              <bucket>&quot;70 - 74&quot;</bucket>
              <bucket>&quot;65 - 69&quot;</bucket>
              <bucket>&quot;60 - 64&quot;</bucket>
              <bucket>&quot;55 - 59&quot;</bucket>
              <bucket>&quot;50 - 54&quot;</bucket>
              <bucket>&quot;45 - 49&quot;</bucket>
              <bucket>&quot;40 - 44&quot;</bucket>
              <bucket>&quot;35 - 39&quot;</bucket>
              <bucket>&quot;30 - 34&quot;</bucket>
              <bucket>&quot;25 - 29&quot;</bucket>
              <bucket>&quot;20 - 24&quot;</bucket>
              <bucket>&quot;15 - 19&quot;</bucket>
              <bucket>&quot;10 - 14&quot;</bucket>
              <bucket>&quot;5 - 9&quot;</bucket>
              <bucket>&quot;0 - 4&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Subzone:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Subzone:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Subzone:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]'>
            <groupfilter function='member' level='[none:Type of Dwelling:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff9da7' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff9da7' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744601601:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</rows>
        <cols>([federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk] + [federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744601601:qk])</cols>
      </table>
      <simple-id uuid='{F8B8EE15-3E2E-4ACF-87EE-6CF8448C4AB5}' />
    </worksheet>
    <worksheet name='Population Pyramid_Top_9_Area_SG_2022'>
      <table>
        <view>
          <datasources>
            <datasource caption='2022M&amp;F (SG_Residents_Jun2022_Merged)' name='federated.0ewukna0yphxib12ymrcj107z9nr' />
          </datasources>
          <datasource-dependencies datasource='federated.0ewukna0yphxib12ymrcj107z9nr'>
            <column datatype='integer' name='[2022]' role='measure' type='quantitative' />
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column caption='Female' datatype='integer' name='[Calculation_609674852744388608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Gender]=&quot;FEMALE&quot;&#13;&#10;THEN[2022]&#13;&#10;END' />
            </column>
            <column caption='Male' datatype='integer' name='[Calculation_609674852744601601]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Gender]=&quot;MALE&quot;&#13;&#10;then [2022]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Planning Area]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subzone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type of Dwelling]' role='dimension' type='nominal' />
            <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Planning Area]' derivation='None' name='[none:Planning Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subzone]' derivation='None' name='[none:Subzone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Dwelling]' derivation='None' name='[none:Type of Dwelling:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_609674852744388608]' derivation='Sum' name='[sum:Calculation_609674852744388608:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_609674852744601601]' derivation='Sum' name='[sum:Calculation_609674852744601601:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Age Group:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Age Group:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Age Group:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;90 &amp; Over&quot;</bucket>
              <bucket>&quot;85 - 89&quot;</bucket>
              <bucket>&quot;80 - 84&quot;</bucket>
              <bucket>&quot;75 - 79&quot;</bucket>
              <bucket>&quot;70 - 74&quot;</bucket>
              <bucket>&quot;65 - 69&quot;</bucket>
              <bucket>&quot;60 - 64&quot;</bucket>
              <bucket>&quot;55 - 59&quot;</bucket>
              <bucket>&quot;50 - 54&quot;</bucket>
              <bucket>&quot;45 - 49&quot;</bucket>
              <bucket>&quot;40 - 44&quot;</bucket>
              <bucket>&quot;35 - 39&quot;</bucket>
              <bucket>&quot;30 - 34&quot;</bucket>
              <bucket>&quot;25 - 29&quot;</bucket>
              <bucket>&quot;20 - 24&quot;</bucket>
              <bucket>&quot;15 - 19&quot;</bucket>
              <bucket>&quot;10 - 14&quot;</bucket>
              <bucket>&quot;5 - 9&quot;</bucket>
              <bucket>&quot;0 - 4&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Bedok&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Choa Chu Kang&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Hougang&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Jurong West&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Punggol&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Sengkang&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Tampines&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Woodlands&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Yishun&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Subzone:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Subzone:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Subzone:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]'>
            <groupfilter function='member' level='[none:Type of Dwelling:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff9da7' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff9da7' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744601601:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</rows>
        <cols>([federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk] + [federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744601601:qk])</cols>
      </table>
      <simple-id uuid='{7DAF7851-00AD-4AD2-93DD-AC0BEFB8DFF0}' />
    </worksheet>
    <worksheet name='Population_by_Areas_2022'>
      <table>
        <view>
          <datasources>
            <datasource caption='2022M&amp;F (SG_Residents_Jun2022_Merged)' name='federated.0ewukna0yphxib12ymrcj107z9nr' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top Planning Areas' datatype='integer' default-format='N' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='9'>
              <calculation class='tableau' formula='9' />
              <range granularity='1' max='20' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ewukna0yphxib12ymrcj107z9nr'>
            <column datatype='integer' name='[2022]' role='measure' type='quantitative' />
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column caption='Labels' datatype='string' name='[Calculation_1131247984952020992]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Top N Planning Area]&#13;&#10;then &quot;Top &quot; + str([Parameters].[Parameter 1]) + &quot; Planning Areas&quot;&#13;&#10;else &quot;Others&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Planning Area]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subzone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type of Dwelling]' role='dimension' type='nominal' />
            <column-instance column='[Top N Planning Area]' derivation='InOut' name='[io:Top N Planning Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1131247984952020992]' derivation='None' name='[none:Calculation_1131247984952020992:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Planning Area]' derivation='None' name='[none:Planning Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subzone]' derivation='None' name='[none:Subzone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Dwelling]' derivation='None' name='[none:Type of Dwelling:nk]' pivot='key' type='nominal' />
            <column-instance column='[2022]' derivation='Sum' name='[sum:2022:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]'>
            <groupfilter function='member' level='[none:Age Group:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Gender:nk]'>
            <groupfilter function='member' level='[none:Gender:nk]' member='&quot;TOTAL&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Planning Area:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Planning Area&quot;' />
                <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Planning Area:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]' direction='DESC' using='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:2022:qk]' />
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]'>
            <groupfilter function='member' level='[none:Subzone:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]'>
            <groupfilter function='member' level='[none:Type of Dwelling:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Gender:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:2022:qk]' scope='cols' value='2022 Population' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0ewukna0yphxib12ymrcj107z9nr].[io:Top N Planning Area:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ewukna0yphxib12ymrcj107z9nr].[io:Top N Planning Area:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ewukna0yphxib12ymrcj107z9nr].[io:Top N Planning Area:nk] / ([federated.0ewukna0yphxib12ymrcj107z9nr].[none:Calculation_1131247984952020992:nk] / [federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]))</rows>
        <cols>[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:2022:qk]</cols>
      </table>
      <simple-id uuid='{4ADECA7A-5ED5-4E7B-9219-169EA754B1BC}' />
    </worksheet>
    <worksheet name='Trellis_Population Pyramid_Top_9_Area_SG_2022'>
      <table>
        <view>
          <datasources>
            <datasource caption='2022M&amp;F (SG_Residents_Jun2022_Merged)' name='federated.0ewukna0yphxib12ymrcj107z9nr' />
          </datasources>
          <datasource-dependencies datasource='federated.0ewukna0yphxib12ymrcj107z9nr'>
            <column datatype='integer' name='[2022]' role='measure' type='quantitative' />
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column caption='Female' datatype='integer' name='[Calculation_609674852744388608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Gender]=&quot;FEMALE&quot;&#13;&#10;THEN[2022]&#13;&#10;END' />
            </column>
            <column caption='Male' datatype='integer' name='[Calculation_609674852744601601]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Gender]=&quot;MALE&quot;&#13;&#10;then [2022]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Planning Area]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subzone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type of Dwelling]' role='dimension' type='nominal' />
            <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Planning Area]' derivation='None' name='[none:Planning Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subzone]' derivation='None' name='[none:Subzone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Dwelling]' derivation='None' name='[none:Type of Dwelling:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_609674852744388608]' derivation='Sum' name='[sum:Calculation_609674852744388608:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_609674852744601601]' derivation='Sum' name='[sum:Calculation_609674852744601601:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Age Group:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Age Group:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Age Group:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;90 &amp; Over&quot;</bucket>
              <bucket>&quot;85 - 89&quot;</bucket>
              <bucket>&quot;80 - 84&quot;</bucket>
              <bucket>&quot;75 - 79&quot;</bucket>
              <bucket>&quot;70 - 74&quot;</bucket>
              <bucket>&quot;65 - 69&quot;</bucket>
              <bucket>&quot;60 - 64&quot;</bucket>
              <bucket>&quot;55 - 59&quot;</bucket>
              <bucket>&quot;50 - 54&quot;</bucket>
              <bucket>&quot;45 - 49&quot;</bucket>
              <bucket>&quot;40 - 44&quot;</bucket>
              <bucket>&quot;35 - 39&quot;</bucket>
              <bucket>&quot;30 - 34&quot;</bucket>
              <bucket>&quot;25 - 29&quot;</bucket>
              <bucket>&quot;20 - 24&quot;</bucket>
              <bucket>&quot;15 - 19&quot;</bucket>
              <bucket>&quot;10 - 14&quot;</bucket>
              <bucket>&quot;5 - 9&quot;</bucket>
              <bucket>&quot;0 - 4&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Bedok&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Choa Chu Kang&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Hougang&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Jurong West&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Punggol&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Sengkang&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Tampines&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Woodlands&quot;' />
              <groupfilter function='member' level='[none:Planning Area:nk]' member='&quot;Yishun&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Subzone:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Subzone:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Subzone:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]'>
            <groupfilter function='member' level='[none:Type of Dwelling:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]</column>
            <column>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff9da7' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff9da7' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744601601:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</rows>
        <cols>([federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk] * ([federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk] + [federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744601601:qk]))</cols>
      </table>
      <simple-id uuid='{0B5033C4-C90F-4588-A801-1E102D008DBC}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='SG_Population Pyramid'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='31' param='horz' type-v2='layout-flow' w='98988' x='506' y='929'>
            <zone h='98142' id='29' type-v2='layout-basic' w='98988' x='506' y='929'>
              <zone h='49071' id='3' name='Population Pyramid_SG_2022' w='49489' x='506' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='5' name='Trellis_Population Pyramid_Top_9_Area_SG_2022' w='98988' x='506' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='28' name='Population_by_Areas_2022' w='49499' x='49995' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='39' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='38' param='vert' type-v2='layout-flow' w='98988' x='506' y='929'>
                <zone fixed-size='280' h='49071' id='3' is-fixed='true' name='Population Pyramid_SG_2022' w='49489' x='506' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='28' is-fixed='true' name='Population_by_Areas_2022' w='49499' x='49995' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='5' is-fixed='true' name='Trellis_Population Pyramid_Top_9_Area_SG_2022' w='98988' x='506' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6C9422BB-DB1B-4F24-837E-BAFB253CF1F0}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Population Pyramid_SG_2022'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2BED518B-E640-43F9-A7BD-924E7E0A7F28}' />
    </window>
    <window class='worksheet' name='Population_by_Areas_2022'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0ewukna0yphxib12ymrcj107z9nr].[io:Top N Planning Area:nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[io:Top N Planning Area:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Calculation_1131247984952020992:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Gender:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F33F9666-F926-4B7B-9E12-FF2825A93581}' />
    </window>
    <window class='worksheet' name='Population Pyramid_Top_9_Area_SG_2022'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='300'>
            <card param='[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A89DDAF9-3AAB-40BA-BC9A-9C4FE85809BD}' />
    </window>
    <window class='worksheet' name='Trellis_Population Pyramid_Top_9_Area_SG_2022'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Bedok&quot;</bucket>
                </multibucket>
                <axis>[federated.0ewukna0yphxib12ymrcj107z9nr].[sum:Calculation_609674852744388608:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Age Group:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Planning Area:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Subzone:nk]</field>
            <field>[federated.0ewukna0yphxib12ymrcj107z9nr].[none:Type of Dwelling:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A27762D9-7BB0-406D-9F9F-05248CBE1070}' />
    </window>
    <window class='dashboard' maximized='true' name='SG_Population Pyramid'>
      <viewpoints>
        <viewpoint name='Population Pyramid_SG_2022'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Population_by_Areas_2022'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Trellis_Population Pyramid_Top_9_Area_SG_2022'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D139CF1D-EA60-43DE-B019-7CD4AAAE9BC9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Population Pyramid_SG_2022' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Population Pyramid_Top_9_Area_SG_2022' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Population_by_Areas_2022' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29WW9jV5bv+TsDD8nDeRRFzUPMg8Ph2XlvXmTmrUahEujKGoFCvRXqg9T3
      aPRjAwX0U6Gyuy+yypWd2WnfHCLCdjgGzaIkiuI8k4c8Yz8oIirtGM0IUVLo/ADDtsj/OZvD
      4t5r7bX2EhzHcXBxOaOIxz0AF5fjxDWAR3S73eMegssx4BrAI2zbPu4huBwDrgG4nGlcA3A5
      07gG4HKmkR//R7fbPdPr4F6vN7LWcRwEQXC1p1Ar/PE+gG0MKVXrCKJMOp1CfOr5Ds16DV8w
      ik+Rv/vgcxn0uzRaXRKpFIosPfm7aRoIooz06Ea6rqMoyvd7ZW+IL77e4D++LoykPWkfqqt9
      de23v8WiSLdeQYln6TQqVNsDsqkI+UKJyek5hF6VUs9Gy69w4/rVV755vlAgHouxsrZBJqpi
      eQKEFXiwts7S+avUS3kyswtUCnvE4kmi0chIL/J1qLc1/rAymgG4nF6+5QOIkodwKEQoHGK/
      WCYq9tnIl0hksuzv5fEGggzbTbq9/ve6iW3qHBwU8cnwYH2X3d1d9osV5menKOe2SczMs7e9
      ze7GA3rmaBbu4jIKTznBHq8XWRTxKxJ7tQERr8P25iahaAzZ40WRRbJTM9/rJj6vF0EUkRQ/
      yYhKMpnCI9rkDyrE0nF219dQwzGWL11Ha9ff2ItzcXkZwstygTqtOh41is/zdgeMtvaKlNrm
      SFrbthBF6eVPdLUnTvtSTzYUiY90w9OGbTuYljWS1rJspNE+F1d7zNqnDODhva9w5ADJWITE
      RJrn3c/S+wwchYD35dGg/Z0NNnIHXLtxk1hYfcEzbbq9IcGA/7nPGDUK8DJWdqv8b//P/SO5
      tsvJ5elvr+wj5rPZ3a8SCKvsbG0TS0xQLBZQ/CH8ok6vP2RqMoWOlwf7B4QjYXzOkFKjy/Xr
      7+BTvm02U7MLtDWHoGLxy3/7H6QXrtCr7jDQbbzeAPFECNvQ8fgD6KaE1jjAEjxEAjIb23vM
      z85Tavf56IObqN8j/Ori8jKeWtjXygV0OULUL9Jq1DHMIQf7JSLJDH5FRJC9LE4naHe7aMMh
      iew8HsFCtwRSsQCm/XyXolWrkJ6eY9jvk87OMJFOM5VO4IgisWgU4ZE7EktmyKZiDE2HC5eu
      kJ7MkFKh3h4c3TvhciZ56uf0yvWbxKJRWg0fHkWk2x8SiyTw+n1gHy5fFEUk4QnhiB4QPeBP
      0qwesL5zwMTM8jNuI7K0OIcsiciBDmogiCgcbk6IgsBefg/ZG2Q+E8E0LQQBBCAzDc1Wh0gk
      hCAsE4sHjuyNSEZUPrkyPZL2pG3uuNpX1740CvSqdJo1+qZAOhnnNEby2+024XB4JK1pmsjy
      aEszV3u82jdmAC+jXK6QSqe+l3HUa3WCXoHaUMInmETi8W+t2SxTx0JGkV8/RPvz/+8b/vf/
      8eC1r+NyunjKJEr5LUodh6vn5xgODWSPhDYwCAW8tNpdwuEwvU4HXyCIR371mNTBQQHD1IkF
      FNr9IaX6kHRMoVprMTeVYm2vSiIeRxi2qXZ13nvnKrVqha7iYeCIdEwdY9ClXO+RSoSotQf4
      rBb7gwD/9ebFN/Jm2G559JnjKQOotwfIDvSqOVaqMnK/QLHS5No7N1hfuUtiYoFGo8Y7N94l
      Gnp+uPKPcRwHQRRpt9sERB/ddp/Y5DlalU0uLE2zt7VBYuoaTmcHy/ES8Nk4QDTgYa9lEVMt
      TEFmO5cjEIxgCx5ss00gEmN+IvOm3xOXM8S31g6OpdFu97ANjUprwOz8PKoaYOncBbR2g8zM
      FLYpkIp4OSjXXvkmB3vbxFOTJCMh9mt94sk0saDCVDrJeq5Idn6ZqCoRi6YRnD77xQoA0dQE
      yWiIWEglPjHF4sIisldFkQUk2UM4nqZTPXiz74jLmeJbPoDjODgcRmAOvWYRsB/toolYlo0o
      iti2jSRJR7IpVS7sYkgBsukER7Tn9UyazRZqMDiS1jItpO+xHHS1J0c7FifYtky6PY1gKIj4
      nG+1Y1vYiE9qA8bN7+9t8cXD8kha+1E419WePu1YtlXXVx7iD4URPArN0j7xzDT9ZoUhChNR
      le29fSajKk0xRlRxaNVKqLEMkqVR7wyYm55gaytHanKaSPDV/I7vS7nR45df5o7k2i4nl7EY
      wFQ2w8bOHlqvR73dp97TkQQHxeNhu1klG/NQ6JhsbX/Jp5+8R6vTZaf0kHjQT8ijsJLbYj6b
      ZqdQJ3JuahxDdjkjjMUAen0NRRaRFRWf12AincbQNXAcnKHFVm4P/8Q5LlxYplIqMBja+Lxe
      QuEIfsCRbba2trGV1DiG63KGGNtG2POolQsUilWWLl9DlZ+9vuu16+R295mYWSIZeVE26eis
      5QrsVEfLNTppOe6u9tW1x24AJ4XcfolGf7RTMR5HyVzt6dOOZQm0t7tLOuxnsz4k4nHIzMw8
      s87goHiArhvMzc4+8zqd2gGEJgkdwcER97bKbj3AGWQsBmANB+SbNrJt0dMstlfv0+1pROIJ
      Wq0OwUiUXq1CzxaIhVR6zQq373zF7PkrlA4K+NQQqmjQajVQo126PY0b715FEd/uMk2Xo2cs
      36DJdIh8sU1QNjHwopsOmXiIRqtLejKLMewge8OEVC8ApUqVTCpKs90lM7NASFUwHZFUPEIo
      lsCPRmdwdg/xcnlzjGUGUMITvHsliF+RiDoePBhUW33enY1RLJZYXr5Et1HFlv2oXhlZdKg1
      OkxHIkiyDHYQ2xjQ7utEwn4Ea464f8Ti0OcQDfq4tpgeTew4jLxt7WqPVes6wY9w6wHOpnYs
      M0Cz2SQajT7590nki3t7/B//sTqS9nH+lKs9fdqxGEDh4ACfz8f+fgGt06TWHpJKx4hHw9Tq
      PbrNEkO8ZOMq++UGU6kE+7UaiUQGrVmmb4pcuXz+SCvNTMum3deP8A4uJ5GxOMGOpVMoFOj2
      h7T6A+YTIqt7NSxTp1wq4QkkEB2DbrfLsF1i/6DN7IVL9Gu7OGoMj3BYH+Di8qYZiwEkUxkW
      FxdZmM0SDfjI1W1uLKTY3NohmkjSaxYp11tIkowvGCeejKIIEE1l0ZtlitXGqawzdjn5HLsT
      7Dg2u9ub+CIpJhLf8Q8cm72dbWQ1RiZ9tMX21VoDUfGNpD1pOe6u9tW146kHsP+zkAYExEc5
      /69zzMWb5suHOW5vjnYw7+PX52pPn3YsTnBufYVoKkW7bxDwBxDMHrIa5WBvk1gySyTkx+uR
      GZo2vXYTyRciFj66M4CexX61w79+sTbWe7ocP2PxAeaXlni4ssXsRJhqrcHOboHBYIBpOTTq
      VXZ2drB6VXYLRYqtAeWi26jCZTyMxQBEWWEiFUcUBGRJJhJWKVeqhCMRVL8fr+SwurGDIIhE
      o1F8vuNpk+Ry9jh2J/ik8GAjz9rBaN3iT9q61tW+utY1gEfsFyv0jFHf3JNV5OFqX107npLI
      ZpWtfIl0IoESihB7TmG7qWusrm0QS2WRBJOJ9MS3HtfaVXQpSLNeY27mzdYGf7ledOsBziBj
      MYDdQpmrV64wbJb5evUh4XAUBm2GlsjM1ASb62ssvvMJenmHqaXLRP0Sv/vi1+wXa0QCCjMJ
      P0UrTtTs8LuHa3z68YesP7xL25CJKDbd7oD0zBTlUhlZDnL18tI4XpbLW8BYnGBFtOkMhuiG
      yeziMl7JxpYUogGZfLFCwGNTaWn4fD6arTbD4ZD05DTRkB9d1+l32xiWgyDKzM9mqdVLtDsG
      zXoVSQlwbnaSZqtFdnYBxzTG8ZJc3hLGMgMsnr9EbnuLZDpL3OfF9mUxtC5dU+J8RqLajBCP
      +1G9c+j7u3Q0mUwmg4OAYA0p1VpMRr0opJiPKQy1HnLGYCawSMjvQ5EF5tQgt/7wB2KZxZHG
      GPArLE6Olql60jIcXe2ra98aJ9hxbLS+htevjnS6nFsPcDa1YzGAVr1ModxkYWkJn+fVvXhT
      H2DYEn6f5whHd8hnv3vI//mbzSO/j8vJYjz1AOU6F84t8uD+N0zOncPS+wx7LTqaxcL8NFtb
      OSKJCaxenZ4pMRlXKVTaZFMhenaAaV/kyMeo6SYHtdH2AVxOL2Nxgm1DY2V1nVQiRr2jUavV
      MGyBdMzH9maehYuX6NS30YUwonO45l+eDJGvdsYxPJczzFhmgFgyQ3ZyEsccUH6wjuD1EwqF
      8CkSExN+1h/cx0bF1ytRbvW5tDjF2n6DmakMtnj0yx+Xs8sTH6Db7T5KVx4vutZlK7dHdnaB
      RnEPUY0yMzn+M0Ar9SYDc8Sjt0/Y9r6rfXXtWxMFel12dnZoNpsjaU/ah+pqX6wNBAIsLx+2
      8/3OEsjh7p1bIErE01lqtSqJWBhB8JJMJzC0LoLHj0cE3TAxhhq+YAS/98XLlI3V++iWALKX
      pbkZwKFcOGBiOouh9dBMnUK+zeWrS2yvPcCwRQTFz3QqgiP5KO5tEc/MonrARKZZKZOZziKK
      MvKIZ0V+l2azyd27d9/ItVxONslkkuXlZfL5/HcNYIjHn+Dicob7a7sMDQPRMRmYDrntHPmt
      DYRgjKQqMbW4xMr9h5y/9s5LDcB2HGzLwONT2d7aAcFEsgzur/SZiXvoe4LoQxsB4fC5po7i
      j5Df2SZf05iI+fBINhtbBXAsFMnm/kqfa1cuHeHb5PK20+v1vhsF8qJrVe7eXyExkQF9wNAW
      SaVTeESJcDTKwtwMoWiSeCRILBLi4FFDuxchAKLkwTRMuq0KxWoDrz9E0AsD3cLjDaBrTUzH
      OXyu7ME0erQ7Ol6vTCjgp9HuYel9BqaFTw0TVGCgm0fyxricDaanp10f4DE7OzvU66PVBL9O
      bbOrHb82EAhw7tw5Pv/8c9cAHlOr1fB4Rgu5WpaFJI14WoGrHZs2Eok85USPZR/AcWzu33vA
      5atXntmpz9Ea3Mv3uLqY4qt7G7z7zpUnj7UrVZR4mFqpQTikEgqFjmSM+XzedYLfcv7qr/4K
      Vf12h6GxGIDerWLoBvWeQXHzLkN8TCdDlMpl4tMXmPL2KTdaNKrQG+jsbK7S7AxYunSFfqvG
      19vbvPfuTcr7OxT2cvRNketXLx9bS1WXt4expELs7BSQfTL5nV0C4TixcIB2b8jCzCS6cZi/
      nwqrrO03SYR99IYmsxNh2n0dUVSYnIjR7vQZaF1MfER8EvoxbNq5vH2MZQbIzC4SDodpt9uI
      j+L2RrfJnbsrLF77APwxFhc8DDodFEVGwqRY67GQ8aN7UsQDAbqtFtmpecxhj54h4XtD8f/H
      yLJMIDDes4hcxsuzHOhjc4KN4YB2TyMWi47c/ftN4tYDnE3tWAyg26qxX6ozO7+AXzkcxEDT
      8Pr9mMM+luh9UifQadXxqBEke0Bn4BCPBJ95TU3T8PvfXNf4lZUVtra23tj1XMbL4uIiFy9e
      pFarEQwG8Xq9bG9vMzs7y507d7hy5QqqqtLr9TAMg1AoxO3bt8ezBCrXWyzOZXmwtsZMdhKw
      6TTbROIRBBz6gxL37hb54U8+olgqIil9JKdLqycyaHuwpAABxUEzwB50wReiWz9AkPwsnjuH
      Ir3+DDIcDqnVaq//Yl2OhUwmg2EY/Pu//zs/+MEPcByHn//859y4cYNz587xy1/+kj/7sz/j
      zp07yLJMv9/H7/ePxwk2h33WN3dQA37KpSrlchld67C+U8DuN8AfZnZmDq8kInl82OYA0xbw
      2H02cgUqlQoHxRKpZIxuv8/2dg6PVyUb99LoubvBLod4PB6uXbsGwC9+8Qs0TSMYDPLVV1+h
      aRqCIHDjxg0EQaDZbJJKpcYzAwRUlVZXw+PxY3aLdE2R+ckJwo6B7tj45ADlfp6hlUFVA8jO
      AEOK41X6IIp4Q1FUn4RHAMt2CIdCBEMhFJ+M/Zzu8i5nj8FgwIMHD4hEIvzDP/wDd+/eZWZm
      hmKxyPLyMrlcjq2tLUqlEu+99x6rq6vuTvBjyuXyyNrTujP6NmlVVSUYfLa/CNDpdFBV9Sn9
      WGaA04Cu63Q6o5VgnoQc97OqXVpaQlFefpiy3+9/pvGMxQBWH36DZQv4QnEm4mEUnx/bGOKI
      Hgb9LqFQCNOyULwyv//8fyIpKhcvLSN6/NjGAL8aQDrirvC1Ws1NhTiFzMzMvJIBPI+xGIBp
      mgiSgmMZfPPVLSxvFHHQZObcVbqNKqXCLv5YhplsAtMwUfwS3XodQ5bZ3Njlvfffe9JF3sXl
      TTKe/gAeP5cvX2EqriIH43hEh6npLPn9fQAUNcRsdgIBSKQmUGTQdRPZq5KK+Dgoj5am7OLy
      MsbiBFu2jSSKOI6DoeuIsoxjWwiihIgAAo/Wdg625SAIYDkOoiBgGAYeRTny3eKtrS0qlZcX
      9zyLk5Djfla1N27cwOt9+ergWHeCTwONRuOpVNlX5aRt779tWkmSkGX5SO47np3ggz2qjQ7x
      9CSZZAyARq1OJBHHGvSwRBnLcAgEfBzkczRaXSZmFkmEv/2FHPa7CIqKIr/5ldvu7q7rBJ9Q
      3n//fS5cuMC//du/8aMf/Yi7d+/SbDZZWlpic3OTVCrFu+++yzfffEO1WuXq1avcvn2b8+fP
      UywWURSFGzduPPPaYzGAVqeL3++j1Wpg9PsgmNiGTbfXQfWKdAyDtftF/tt//5hmd8DFi+dZ
      XdugWhBQAlH0dpmBJTKdiYNiUyrsEk1mqO3vgjdIKuyhWGowff4SydCbyw9yOTkYhoHP52M4
      HDI/P8/nn3/O5OQklmXh8x32d65Wq6RSKUzT5N133+Xu3btEIhH6/T6WZT1zBhiPEyx5SCUT
      mPqAXq9Hs9lC1zqUGh0Ea4g3FGVmZhZFFLD0PmvrObLpJF1tyH6hgKKGmIgH6Pf71CpVhqZN
      4WCfYCRJ0C/T0QxmJxPoQzct4m3F6/U+SX70eDz4fD40TWN3d5eZmRngcJkzGAyoVqtsbGzw
      6aefous6hmE81+8Yz9GI4QB7+QKZ7Cz9epEBUTKJKFOiw1A3ifjD9OUqhu0wNbtILBrFNgaE
      Ay0ms1GCfi+yCNVinkg8jVN3iMcjeD0+wEbr1Hmwvs3y9dFPlBNFceSaYJejRRRF2u025XIZ
      SZIQRZFQKISqqly/fh3DMLh37x7Ly8tUq1VUVaVYLFIqlQiHwyiK8tzNt1PlBNdqNeKJxFON
      DrRui3pnSDaTZtRgkVsPcDa1YzGAWqVIf2AQTaQIqb6nHm/WKwxMgYlU4rlTlT4c4vF6R+4Q
      8jLW1tbY29sbSXuSwoKnWfvjH//4hdc9tVEgVVXZyW+TSiZYX1slMz1Pu7KP4I+QTSfY2z8g
      HfaSO3DQO3WmpjLYgh/H1DC0Dj1Thn4LTRCZm/vPopo3iaZpFApuh/qzxlgMwK8G8PtV6qU8
      yewc+Z1tMIdU9itk0wkG/Q4VBJJJg7bWY7tQw+sYCAIYloRXNLEdgcnJJNV6g5nM+E+Pdnk7
      GUsUCEBV/URicfa21lDDYQzTIhA4jPOnJme4eu0aimAheRT8Xh+i0SM6OYvMgK5xWAPg9Xrx
      Ka6j6vLmOKFOsM3W5g7zi/NjK5gvFouY5mhh1JOYH38atVNTU2+nD/D9EVlcWhjrHW3bRtf1
      kbQn8ct0ErWLi4uv9SU+CsYykr3tddp9nZmFcwS8IqIo8XjisW0bSZJwHBvHERBF4ckbbNvW
      o+faOAiIAliWgyRJI4c7n0elUnFTIY4QQRBYXFxkfX2djY0NfvKTn/DP//zP/N3f/R23bt3i
      /v37/OM//iPFYpE7d+6QyWSAwzLHqakpvvnmGy5dusSFCxfe6LjGYgAeWca0hgw6FT7/f78m
      Nb2A0a2yfO4iD+7eITy5jNkp4XgCpIIK/W4NQ51CMHrIHgWj38YWZBSPhOQMCU9dYSrupjyc
      Rs6dO0c+n0dVVc6dOwfAJ598gmmaSJJEu91GVVU2Nzf567/+az7//HPy+Tw/+9nP+I//+I/T
      aQCBaJKLsQD3Vg+4dOMDEiEfzXYYDzpLl9+hWe+QnJoFwBwOmc4k2WjYzEzP0qwUUSJxPJjY
      HpXZlEq5dwLdFpdX5nHWrd/vRxAEcrkcly9fRtM0FhcXSSaTrK6uPnmuJEkUCoUjObnvxDnB
      9fIB+wcVli5fRfWMLUjF/v4+mqaNpD1JNbInWbu8vPxCH6BcLpNKpZ7rCJ/aneDTQKlUwrKs
      kbSnzRk9Sm0gECASeX5j85OWCjGWJVC7XmL3oEo0nmb6Oy1QtWaJjhglHT7emt9iseg6wW+A
      S5cu8f777x/3MF6ZsRjAfrHG/HSGSlvn3p3fUWzozM5lSIZUWt0OUtjLbz//PWpiCqdXQXM8
      zKaiVGo1ghPzLE25O78uR8NYFtk+GfqWTK/VoDfUWZibJpuK8DBXIR72M2iU8YTTdLttwvEU
      E8kY2tBgMpPCttw+AC5Hx1hmgPlzFykW9pldWMDDNI2ujm1aJJNxgtEJfFGRWrlCODaL59G5
      /1qrwh++vM+lmx+PY4j4fL4nsefvy0nMrDwu7VG1sDoqjs0Jfnzb572RjuPgOCAIz3/Om8St
      Bzib2rHMAP1Og939MnOLy/iVw+jBH3+pO53OU78cgiC88d3eF7G7u8uDBw/Gd8O3kFQqxY9+
      9COKxSK2bRMKhbhz5w4ffvghX3/9NYlEgoWFBVqtFrdv3+bmzZtsbGzg9/tJpVJsbGzw8ccf
      jxyeHYWxGEBua5vJhXMI1oDVhztEUpM0SnvopoMkKXi9Ivldg/T0HI3SPkowhiJCv9MklUrQ
      N0WqxQKT0zMU9nKokRQ+hlQbHc5fvY5vtGjet7Asi+Fw+PoXOsM8zqUql8v0ej0GgwFXr17l
      17/+NbIsUy6XWVhYwHEcrl+/zpdffsk777zDF198QaFQYH5+nlwux+Li4tjGPBZTu3j1Oo3i
      NnfvPqClmfR7XbyBCF6vQlL1ocsKly5foLizjTY02C/s02nX0XpdHmzsg9lDMPvs7FeIprMI
      1oCebpEMeNBdH/nEMT8/jyAIiKJIMBjEMAw0TUN8dDiapml8/fXX/PCHP+TWrVt8+OGHyLKM
      qqojZ+SOylgMoFIsMDBEzl08T0ARUdUAkXCIWCyOGgmTDPm5f3+F7NwckigSj8VJBP1MLF4g
      HougSDKi4icRixBU/YTDETyYbO4WcTulniwcx+HLL79kf3+fxcVFPvvsMz766CM8Hg/JZJKv
      vvqK/f19bNtmc3OTXq/H1tYW09PTfPPNNywsjDcL+NTuBFcO8nQNkfnZ7BupE67X6yP3HDtp
      jt1xaUVRfOkxha/T2+3UpkIchs3Atp0nDo79qM/vOB2eF7G9vU21Wh1Je9pycl5XqygK77zz
      zkjak2a0Y3GCt3M5Ij6RgRSGYYdoKsNebhMHgaX5GQrlJrPZFJVaHV8ggscZUm1rTGcnx7bE
      abfbrKysjOdmp5xgMDiyAZw0xtMfYNhjtTLkw3dS3HuwRb7SJKIe1va2mw0qOw8ZGkuYoorc
      2sUyHWRBR5+YxHdyiodc3kLGsv7wqiGuLU2xvpXDwoNHEpEkCUmSaLVaBENBLMshFo3i83lx
      zAHlanMcQ3M544zl93Vudg6AS4lXSDWIzZG3LRzJh+cNxPdflXg8zs2bN0fSnsSUhKPUnqSa
      3tfl1EaB3jSVSmXkL8RJzMs/Cm00Gj2yc/qPSzsWU+7Uy+QKZYKRJAszr55wNui3saUAqvfo
      p4JCoeDWA7yEn/70p1SrVR4+fMhHH33E6uoqkUiEGzdusLW1xdraGpFIBE3TsG2byclJtra2
      +MlPfjJy85GjZiwGkC8eNi1YefCQjc0eEwGHshGiUdwhmsrQrhTxBOMwbDEwJVIxH52hiM9q
      UbOjpHwGnb5OIKCi+hQ6jozP0agWW8iBADeuXRrHy3DhMGfq2rVr/OpXv6LZbHLx4kUcx2Fx
      cZF6vc7y8jI7OzvkcjkqlQoff/wx29vbXLly5biH/kzG4gTLgkVPG6IbJsZwSLfdolYt4wlE
      8DgDukMIBVUCkTiT8QjBaBxb7+MPx5iZzjI0HbLJEIrfS67YgnoeORgnkZ4iEnj6sF2Xo+Pm
      zZusra2RTqdZWFjAMAwsy8KyrCcnOszPzzMYDBgOh1QqlScNLE4iY5kBli9cZntrE9nrYzoT
      o97u887CFIXdLRKZObyeA6RAkIAvhuiAbQ8JxZJMTk+wmy+yODdNqdlnNpsmFIwgCQ7BcBhd
      NYE3kwykKAqxWOyNXOttRZIkLMsiGo3y4YcfksvlkCSJ27dvc+PGDd5//31kWWZlZYUPPviA
      iYkJVldXuXTp5M7QrhP8CLce4GxqxzID2JZJbnuL5MQkoqwQ9L9aAbxt2QiSQLfTPfJKo3w+
      z9ra2pHe4zQSj8f54Q9/eNzDODLGYgBb66tk5s8haTXyLQlFbyH4wgjDDs3eAFmAqflFDnZz
      xCey1Ip5PIEo5e1VMueuElTEIzcAwzDodDpHeo/TyKv04D3NjMUJNixQvQoej4yhddgtlGm1
      2hi2iE+SWZyJcvfhJj3dotWo4Q3FEGyd5MQUM1MpatXaOIbpcgYZT1H8zCT3799nciJJPJ5A
      1Pv4QkECioxtmkgeH4uzKrVSgVA4cngwrqUg+Qfk9ysvPGjJxeV1cJ3gR1Sr1ZEdrNO0m/t9
      tbIsEwwGv/W3k+bIvo727UnqeE0O+xePloB3GnP6v6v1eDxcvnx5pGudZsZiABur99EtAWQf
      6UQE1etBtyUa1QKhcIJ4PEK1UiOeTKB1O9iSQiQ43q3zZrN5plMhVFXl0qVL/Mu//AuapnHp
      0iXW1tb45JNPmJmZ4de//jW6rjMxMcH6+jrxeJx6vQ7An//5n488Ex034wmDOg62ZeDxhalU
      ygy7LaKZeQaahmQfMDBtdjYeEKpMYJoOXkUifPnCkbVEdXkxpmkSCoUIhULk83lmZmZYX18n
      Go3i9/sZDoeYpvmkpdFwODyxuT4vYyxRIAEQJQ+moSMIAslkgkJ+H28gSDIWoaMcpisAABPM
      SURBVFqpEIwlcSydaDyB6nu7Q28nFcdxMAwDRVFot9vAYXi4WCySzWaBww3DQCCAZVnk83n2
      9vZOdajUdYIfsbOz82RK/76cxpz+72oVRXlmwpphGJRKJaanp5/87aQ5sq+jdQ3gEbVaDY9n
      tBasJz2S8yz8fv/Ir/ekfYlfRzsWH6C4v0O91SOSmGBqIgFArVIllkpiDXqYooQxcAiH/eS3
      19kvN1leXsIXCBHwPf0hDdt1dG+E0BusE8jn82fKCf7Lv/zLkQ3gbWI8DTI6HRxHoK91yG33
      QLAQbOh02wR9Eh3TYv1Bkf/23z9mem6ejr5LQNapNRusFPKYhonXH2Qum2BvL89EKkmuViAR
      ibI8P/3yAbi4PIfx1AN4A1y6sIzW7aJpGq1WC13rUGv3EWwDXzjKzMw0yh+dgWKbBkPdIJmd
      IRIOEwv6KZVL9Fpl6l2TheULSM5ofX1dXB4zlhkgEQ6wur7F3MIyvdoBuhgmFQ0xI8JQN1DV
      MLq3gWE7KKLE1OQEilck7QdBkLBUL5IoYQwD+Pwh4okUildCTaff2BhlWT6SLoQnlXEcOX8a
      cJ3gR7j1AGdTO7ZUiG63SyAY/F6bW61amWK1ydTsPEG/cmRjg8Oi+N/85jdHeo/jxuPx8Cd/
      8ifcuXOHZrPJRx99xPb2NplMhmQyST6fp1QqcePGDb788kuuXbtGrVbDMAzm5uaOe/hHwtgM
      YHNzk+mZGYI+GW2gU2sNiEd9FEt1FmczbO4WiSVSiEaHSnvIlQvLVFtdlpeXELFYXVkhMZGl
      Wy/iD0X55uuveOe9j0nFR/vV/i7D4ZBa7e1Ou1aUwx+R69ev88UXX7CyskKxWCT9aCnp8/no
      9/v8/Oc/5+bNm3z22WcIgoCiKExMTJzo2t5RGdvJtIIoUi6XGHQbVCslLF+EUqnCwnSK/NYa
      ntg0/XaZVsdCFkwcQNc6rK2t02q1GRgmudwW2kBHt2B6euaNffnPGrZtY5om3W6XxcVF7ty5
      8+TvxWKR+fl57t+/f3hqXzBILBZ70vzibWMsBlDY3cIfjBL0yuT2qwSCIVLREIlIgPXtPMnM
      FGG/h0AwgmD32C8e/hKrfhVwMA0DQZQIBgIoioyhG3hlqDTa4xj+W0c+n+fGjRu8++67rK+v
      Mzl5WK+xs7ODz+d7Un33ySefYNs29Xr9qZTot4UT5wTnc5tojofl+dmx9ggrl8sja0/LTrAo
      iiSTSeDbTqFlWei6/srn9p80R/Z1tCeuHmB6fulY7qvr+sg1wUeZ0z85OUk0Gn3mY6/zhfhj
      JEkauWnFaWcsBrC59g1ycBJDa7I4N0d/aODzKk/OmTH0IbLix7F0TBu8Hon+QCcYUMcWr67V
      aicyFeLjjw/7JP/rv/4rn3zyCWtra2iaxl/8xV9Qr9f57LPPeP/997l//z66rnPhwgW2t7e5
      ePEiFy9ePObRn3zGYgCCJ4DeraNbFutrq8iiw9D2EEnEadXK5LZ2CaezBGQDW/SymI3zP397
      m3d/+L8wGT2bv0x/jGVZxONx9vf3iUQiJJNJBoMBoigSDocpFosYhsFgMKBSqfCzn/2MX/3q
      V64BvAJjigIJzGVT7B5UEXAwTJP45Awb975hMjNBOjvN8sIskViSWCREuVxjbmaCgT7ejoEn
      Fdu2CYfDaJpGtVoll8uh6zrD4ZBwOEy328U0TQKBAKIo8otf/OLUdWw/LsbiBD9e55qmiSgK
      GKaNV/FgmiaSJB1GeSQJ8fFyx3EwLQtZ9iCOqUfS1tYWlUplJO1R5vQvLCyQSqXo9Xr4/X5s
      28a2bfL5PNPT05imic/ne3I+5+NYvqq+ePl40pzR49KeuCjQcdFoNEYu63vTH8yrVlidtC/T
      adSOxQcoFXJ4AhN4hR6lhsHi3OS3Hu90Os+csof9FitrO0SSaeamM89Po7A0ah2HRHT0utTd
      3d0T4QT7fD7+5m/+5riHcWYYiwF0ByaOdoCMjjaU2NveoKMLqB4LWwrgEU1KhV16A5PsVJZK
      qURico4AfRKZWdr1A4r5AZXmgFjEy0AXCHoFKk2NqVSIYqmAqGYpF7bxhxLMf48mHC5nm/EU
      xQsSIhYGEpJjUGu0OcjvM3REFmaz9Hp9JMXPbCbG1maOoX14oC7Y5LY2mJiaoVarUc3v09Yt
      lhbnqNcP/7/Q6nHh3CJau0ql0cOyrXG8JJe3hLHMAMlEAo9gMsQP5oBWo0YkkSYeCyMIAplM
      BlGU8MoCV67Gye/mCQZUvKKXGzeSBFUvg1gcXyBBIhVHFARisRhef5xMJspWvszC8jKNUn7k
      LXtRFE9EieBJGMNZwnWCH+HWA5xN7VhmgFqlSH9gEE2kCKnPTql1LAPdOuwJ4H/F/gFvkmKx
      yB/+8IeRtI9DmeFwmA8++IBqtUqv12Nqaor19XWWlpZQFIVyuYxtH3a0KZVKTE1NoWkaoVDo
      uekOLkfLWAxAVVV28tskk3HWVleZnJmjWd7H8QRJhb3s7BfIxMNUTR9Rn4dWvUTPEFicmxlb
      QpymaRQKhde6xuOU4Wq1ysrKCoIgIEkSv//97/nBD37A7373OwA+/fRTRFFkbW2NVquFbdv8
      9Kc/fe3X4PL9GYsT7FcD+P0qjjFgMOixsbVHX7fQB13yhRKzcS/lrgm2QaXWpNUZoNhDjFO6
      OLMsi6mpKWKxGJubm9y4ceNJYUmpVEIURcrlMktLS0xNTb21qcangbFlg6qqH0MfIkoKik8h
      HPTiODbOsM/G9i7+zAX8XgWPI6BIXmTRPpVng9q2zZdffkk2m+X27dsIgkClUqFUKhGNRpEk
      CZ/PRzqdJplM8rvf/c7tf3CMHLsTXCsXOCg1OHf5Ml7p+L7yxWIR0xwt9+hxXr6iKE/KC/+Y
      wWCA4zjPTDk+aU7hWdMeez1AIp0lkc4e9zCwbft7l/3FYjFisdhLP5i3sZb2bWEsBlA92OOg
      1sLjC3JhcRYEMPst6oZCKnxY9ggOjiMgimBZDoJwWEcsjskLrlQq3zsV4vr1625v4VPOWAyg
      0uhy7epVVh6usLK6SjYE+bZDte9Q9Zl4gwmcbpm1fIvF+RTDVg0rkCLkj3B+aWocQ3Q5o4wl
      CqQqAjt7eQamDZbOQblCJJYgFFBR1BBLc1N0BiYxvwLeAEszE2Rml/EIb6YLvIvL8xjLDDC7
      dJ52q0U2m8Uxhwx0k0AgSCTQwev3Iwhw8dIlHGQUrwdJcPALMqiTL7/4GyIQCDA/P/+9NO7m
      1enn2KNAJ4VWq/XKqRDfLTQ5aZENV/vq2vH4AMU8lXqb7Owi0eC3IyLNZvNE/JLmcrlXcoL/
      /u//nlarxebmJleuXOGLL74gk8lw+fJltra22N7e5oMPPuD3v//9k64q9XqdTz75xD2Q9gQy
      nihQs8vFC8usbe5QdQyGjkI64qXWNTC1Fns5yM4tUMjvkUhnaFWLpKYWSEZP5g6paZqUy2Wu
      XbvGe++9x29/+1suXbrE+vo6y8vLbG9vs7CwwObmJpIkkUgkqNfrJBKJ4x66y3cYixNsGxq/
      +fVvSE0kMVBRHJNyu8/5pXkCwQjnpiNs7FVYOHeBdr2EqARJnNAvP0AymUSWZUzT5IsvvuC/
      /Jf/giAInDt3jlu3biGKIpIkvbXHCb5NjGUGmMjOcvnKNYqlOmGfxZAQsxEvG9u7JONxZC9c
      WPSyt7XBxNQcIs6JToN4+PAh7Xab9fV1ANbW1jBNk1gsxuTkJNPT09y6dYvFxUVEUaRerxOP
      x4951C7PwnWCH/G6TrAkSSOt8U+aU3jWtGOZAfShRrc/JBKJYJnGk2O6n8bBMEw8HvnRvw+r
      owzDAI62WuplO8GSJPHpp58+93HXwT2djMUANjY2iMVibNSbJCIBvF4/kgiOY1Oqtsim4jT7
      PVKJJJubWyzPxNmpOchGi+jENMV8DgeB5YVZdvJlJiYSqGoQrd97Y6nEvV6PXC733MdlWX6h
      AbicTsZiAI5tks8XmFk8T6VaRBRAEkXazTq24zBstvBNTyOKIn7JYW2vwdLCFKurRUqrq0QC
      hxViaw/vo1s2jm0iiBU8/oibS+/yWoynICYY5cqFJXq9PorXSzrsZyj6ScRjqKE40XCYdDKK
      AExOZWh1BjjDATYiXq/3yT+xWByPP8zkzByNSpFM2nUsXV6PU+kEG4Mu+5U28zNvLo26UCgw
      GAye+7ggCCwsLDzzsZPm2LnaV9ceez3AKHh8QeZn3uzSRxTF5zrnk5OTIzexcDnZjMUAdrdW
      kEOH/QHmZp/RbdBxqNRqpB51LzkOSqXSc6NAf/u3f8udO3fY29vjxz/+MeFwmF/84hfIsszc
      3BwPHz7k0qVL3Lt3j2w2y0cffTTm0buMylgMwBQUBvUSpmOxdu9LdvbLTMwuEPfZtEw/ktFj
      J5/n6qXzlGtt1FCETjWPJQf56L13xjHEl1Kv15mbm+Pu3bu8++67pFIpBoMBqVSKW7dukc/n
      ef/999na2jruobp8D8bWH2B6Isp+uUl/YLB0bomZRJBczcTpFIhm5shkJpAwiaUmsAydeDp7
      orpAXrt2jWKxyPT0NIIgUC6XaTabdLtdrly5Qq/XY2NjA03TjnuoLt+DscwAU1NZvIqXj274
      8Hs9VBsdoqkkN9QIIg7egIpfmEZRQ0jNOtnlJRzbAGd8m0t+v59s9tlOtSiK+Hw+rly5gt/v
      p91uc/PmTWRZRhRFGo0Gf/qnf8r+/v6TJnQup4NTGQU6CtyjEc+mdjxHI5YPKNfbzM4vEvC9
      OJ1B1/UXpEp8m2pxn9bQYWlu+rXHuLOzw/379wH4wQ9+wMzMzGtf0+Xk88QALMviqCaDUq3J
      8uI8axsbhP0SraFAMhpEtnVsfwTHHFLO7+OLxCjsbLB44TqDVhnBFyHo96B1OyTTSbrdLqVq
      k9RElomIh4PGgPOL0xR2t6m2B8xl4+wV2yRifqq1DufOn0N+RS/HsqwnOUePz+90eft5sgTS
      NO1Mf/DtdvvJzBMMBl+5TRGcnkbZrvZp7ZMZ4Kw2Sn6MZVkj+wCvkwnqao9XO6Yw6NvNqF3i
      Xe3xa6V/+qd/+qeRr/oWMRwOqZUK7BVr+D1gIFGtVAmFnpFyYVtsrq9RrreRnAEbW7uEIgE6
      LYN6o0IoHH5hRZuhtVndLiDbAza29whFVDptg3r95dp6ucD2XpFQQOHhyhqSV6Xf7dFtN/D4
      A0gvaCu7t73B7n6JcNDLysoasi9Av9ul22rgUZ+vLe6s0zY9CIMWKxvbBCMRttdW6Btg6BqO
      odEzBPzepwMcBztrdCwFq99gc2sb2Rtgd2uNviFg6Bq23qdviviUp+MxhdwqXdtH0Odh9f49
      grEYG6sP0cw/0lrP1nYaFXaKNWJhP2srK1hI5HNbaJaIofexhj0GtuzOAP+JRW9gk/TJlGtl
      bt/5ilD0Odmmgsj84iLGoE+53uHCwhTFUoGvb91C8AZfXM7p2Gzt7IOlU212uDA/yUGxwN1b
      txF9oZeWgm5sbmKbJgcHRZYuXqZROWBn/QHVrokivfjj7HQ7mFqHnf0S5y5epl7eJ7f2gFrv
      xdpQUKWnDTiotrh2eZ71ew8IpWYYdluUCnus5Q6IBJ+9hD7UDgnH02SSIUr5POH0HMNuk+L+
      Luu7JcKBZ5+dGg6qdLUh7doBra5Oo1ommpln0DnUbuyWCD+n4YrHH8Ia9qjkNmhbAo1SgWh2
      gUGnQTG/w+ZehZDqdQ3gPxEwTYOhoSPLCqlElG6v/8xnOo7Fysoa5y9dBttiMBggiBKpdJpe
      t/vCu+hah742JL+7j26aaIMBoiSTSqfpdjsvHaU/EGYuqVBq6ww0DcuBaDyFOehhvzCKZ2Pa
      EumoH0230AYaliMQS6QwXqL1Pjrc17FNBtoASfEyHA4xTQtfIIxPstHNZwdQfI+CCdXiHpoQ
      Ym4qznA4wDAt/MEIXtFCt56tfRyIqFQbDHsNGs0Og8EAwzrUKoKF8Rzt4wOJZY+Hyak5PP0a
      w8EA07Lwh6Iogolh2e5G2GPa7TaYAxp9m0wihODx0+u0iMZiT/0q26bO2toaojfIbCZOvlhn
      fj7LQHMwjT7haIwXN7h3aLXaeGXhiXY4cDD0l2t77QaFapvF2Sy57RyTs/PYuo6IiegL4vM8
      P0pSLxeodw0WZifJbe+QnZ3HeqSVfEG8z9TabK2u0LdEFudnyO+XWFycp5TP4YumUSRQvTLd
      oU0k+N0+zTabqytotkgsqNLu9shMzdJrlFCjE3gkB1WR6erOM2YQm82VhwwcmfPnL6D32yhq
      gNLeDmp8Ao/o4Fck+jqEnzH7FPM5Ko0Oc4vL1It5ouksnVqRYHwSWbQPtYa7E/yE19kJdjm9
      uEsglzONawAuZxrXAFxOPI7j0Ou26WtDLFOn1eniOA7tVpOhYaIP+rQ7PRwHhlqfeqP5Qqfe
      Ng100wJOaUmky9nCsTXWV7d5uLFOMuzFI9hEF64jDjusb+9xeXGGBw8e8OP/9a+4/X//X0TP
      z1G/K7I44SM6Oc+gWcJExu/zEVBEKvub7JMlZlVdA3A5+QiiH0OrsXD+MsWddX5yc57fFg3E
      2g6Xr7+Hd1AmkJwm7JVxHItms4PY61IcXOXuLz/DMg2Sc9eo7n3J9YyXkh3AUftUWnV3CeRy
      8rF6Jf5wfw+vKJBNhfnVV9skKFHoSWD0+dXnvycW9KPbNsFIko//60/4wacf0ipsEImnGXYb
      CGaPuCqzXWrg9/kRjA7NnrsP8AQ3DPq24vCHP9zmgw/ef+ajrgE8wjWAs8n/Dw3BY8I5O1If
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='SG_Population Pyramid' width='192'>
      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
      DNMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Trellis_Population Pyramid_Top_9_Area_SG_2022' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
