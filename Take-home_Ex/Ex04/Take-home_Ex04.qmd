---
title: "Take-home Ex04"
author: "Li Ziyi"
date: 17 February 2023
date-modified: "`r Sys.Date()`"
execute:
  echo: true
  eval: true
  warning: false
format: html
editor: visual
---

# Overview

For this assignment, the impact of COVID-19 as well as the global economic and political dynamic from 2020 to 2022 on Singapore bi-lateral trade will be uncovered with visual analytics. Dataset is taken from [Department of Statistics Singapore](https://www.singstat.gov.sg/find-data/search-by-theme/trade-and-investment/merchandise-trade/latest-data).

## (TO UPDATE) Loading libraries

For this exercise,

-   tidyverse is the main package to be used for data processing

-   DT is the package to be used for interactive data preview

-   readxl is the package to be used for data importing from excel files

-   ggiraph, gganimate and gifski are packages to enable interactive data visualisation

-   Other packages are for make-up mainly

```{r}
pacman::p_load(tidyverse,
               DT,
               readxl,
               ggiraph,
               gganimate,
               ggthemes,
               remotes,
               ggbraid)
```

## Data loading
Trade data downloaded from the website is in Excel format. Functions from readxl package is used here to import data.
```{r}
trade_export_temp <- read_excel("Data/Merchandise trade by region_market.xlsx",
                       sheet = "T1") 

trade_import_temp <- read_excel("Data/Merchandise trade by region_market.xlsx",
                       sheet = "T2") 

head(trade_import_temp)
```
## Data processing
Column titles, remove unrelevant rows, categorise data by "Import" or "Export".
```{r}
colnames(trade_import_temp) <- as.character(unlist(trade_import_temp[9,]))
colnames(trade_export_temp) <- as.character(unlist(trade_export_temp[9,]))


trade_export_temp <- trade_export_temp[c(11:(nrow(trade_export_temp)-23)),]
export_vector <- rep("Export",
                     nrow(trade_export_temp))

trade_export_temp$trade <- export_vector
head(trade_export_temp)
```

```{r}
trade_import_temp <- trade_import_temp[c(11:(nrow(trade_import_temp)-23)),]
import_vector <- rep("Import",
                     nrow(trade_import_temp))

trade_import_temp$trade <- import_vector


names(trade_export_temp)[1] <- "Market_"
names(trade_import_temp)[1] <- "Market_"


```
For this exercise, the period of January 2020 to December 2022 is to be studied. Therefore, only columns of 2020, 2021 and 2022 are filtered.
```{r}
trade_export_unpiv <- trade_export_temp[,c(1, 3:38, ncol(trade_export_temp))]
trade_import_unpiv <- trade_import_temp[,c(1, 3:38, ncol(trade_import_temp))]
```

```{r}
trade_full <- rbind(trade_export_unpiv,
                    trade_import_unpiv) %>% 
  gather(key = "Month_", value = "Trade_Amount", -Market_, -trade)


trade_full$`Trade_Amount` <- as.numeric(trade_full$`Trade_Amount`)

trade_full$`Trade_Amount` <- ifelse(grepl("Thousand Dollars", trade_full$Market_), trade_full$'Trade_Amount' * 1000, trade_full$'Trade_Amount' * 1000000)

trade_full$Market_ <- gsub(" \\(Thousand Dollars\\)|\\(Million Dollars\\)", "", trade_full$Market_)


head(trade_full)
```

```{r}
trade_clean <- 
separate(trade_full,
         Month_,
         into = c("Year", "Month"),
         sep = " ",
         convert = TRUE,
         remove = TRUE)

trade_clean$Trade_Amount <- ifelse(is.na(trade_clean$Trade_Amount), 0, trade_clean$Trade_Amount)


month_order <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
                 "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")

trade_clean$Month <- factor(trade_clean$Month, levels = month_order)


head(trade_clean)
```

```{r}
trade_region <- trade_clean %>% 
  filter(trimws(Market_) %in% c("America", "Asia", "Europe", "Oceania", "Africa", "European Union"))

head(trade_region)
```

```{r}

```

```{r}

```

```{r}

```

```{r}

```

```{r}

```

```{r}
#| fig-width: 12
#| label: fig-barchart
#| fig-cap: trade_by_region
trade_region$Market_ <- 
  reorder(trade_region$Market_,
          -trade_region$Trade_Amount)


p1 <- ggplot(trade_region,
           aes(x = factor(Market_),
               y = Trade_Amount,
               fill = trade)) +
  geom_bar(position = "dodge",
           stat = "identity") +
  labs(title = "$ Amount of bi-lateral trade in Singapore by Markets in 2022",
       x = "Market",
       y = "$ Amount",
       fill = "Trade type") + 
  theme_economist() +
  theme(axis.title.y = element_text(vjust = 2.5,
                                    size = 12),
        axis.title.x = element_text(vjust = -2.5,
                                    size = 12))

p1
  
  
```

```{r}
# calculate trade surplus/deficit
trade_balance <- trade_clean %>%
  group_by(Market_, Month, trade) %>%
  summarize(Trade_Balance = sum(Trade_Amount)) %>%
  spread(key = trade, value = Trade_Balance, fill = 0) %>% 
  mutate(Surplus_Deficit = Export - Import)

```

```{r}
install_github("nsgrantham/ggbraid")
```

```{r}

```

```{r}
#| eval = FALSE
# create braid plot


```

```{r}
ggplot(trade_balance, 
       aes(x = Month, 
           y = Surplus_Deficit, 
           color = Surplus_Deficit > 0)) +
  geom_line(aes(linetype = Surplus_Deficit > 0)) +
  scale_color_manual(values = c("red", "blue")) +
  scale_linetype_manual(values = c("dashed", "solid")) +
  facet_wrap(~ Market_, ncol = 4) +

  # labs(title = "Trade Surplus/Deficit by Market",
  #      x = "",
  #      y = "") +
  theme_economist() +
  theme(legend.position = "bottom")


```

```{r}
temp_scope = c("America ", "Asia ", "Europe ", "Oceania ", "Africa ", "European Union ")

trade_balance3 <- trade_balance %>% 
  filter(Market_ %in% temp_scope)

trade_clean3 <- trade_clean %>% 
  filter(Market_ %in% temp_scope)
# ggplot(
#        aes(x = Month,
#            y = Surplus_Deficit, 
#            )) +
#   geom_col() +
    # geom_braid(aes(size = abs(Surplus_Deficit),
  #                color = Surplus_Deficit > 0)) +
  # geom_ribbon(aes(ymin = 0, 
  #                 ymax = Surplus_Deficit, 
  #                 fill = Surplus_Deficit > 0), alpha = 0.2) +
  # facet_wrap(~Market_)

# trade_balance3
```

```{r}
ggplot() +
  geom_line(aes(
                x = trade_clean3$Month,
                y = trade_clean3$Trade_Amount,
                linetype = trade_clean3$trade
                )) +
  geom_ribbon(aes(x = trade_balance3$Month,
                  ymin = trade_balance3$Import,
                  ymax = trade_balance3$Export)) +
  facet_wrap(~ trade_balance3$Market_)

```

```{r}
df_long <- tibble(
  x = c(1:21, 1:21),
  y = c(rnorm(21), rnorm(21, mean = 0.5)),
  z = c(rep("a", 21), rep("b", 21))
)

```
